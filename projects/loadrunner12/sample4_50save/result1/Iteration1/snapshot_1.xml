<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="1">
  <HTTPTask id="1" hostname="202.116.104.161" path="/NIP/login.action" url="http://202.116.104.161/NIP/login.action" ip="202.116.104.161" port="80" connectionId="2056" origin="Primary" startTime="334" endTime="373">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="User-Agent" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>emgtQ04=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAyLjExNi4xMDQuMTYx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9OSVAvbG9naW4uYWN0aW9uIEhUVFAvMS4xDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjI7IFdPVzY0KSBBcHBsZVdlYktpdC81MzQuNTcuMiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNS4xLjcgU2FmYXJpLzUzNC41Ny4yDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogemgtQ04NCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiAyMDIuMTE2LjEwNC4xNjENCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbngvMS4xNC4w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SlNFU1NJT05JRD1ERUQwNkNFQzE0N0NBOEQzNEE1MzcxNTc4NzQyRjhCQzsgUGF0aD0vTklQLzsgSHR0cE9ubHk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Tm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTQuMA0KRGF0ZTogRnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sO2NoYXJzZXQ9VVRGLTgNClRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNClNldC1Db29raWU6IEpTRVNTSU9OSUQ9REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkM7IFBhdGg9L05JUC87IEh0dHBPbmx5DQpQcmFnbWE6IE5vLWNhY2hlDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KRXhwaXJlczogVGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiID8+DQo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+DQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCjxzY3JpcHQgc3JjPSIvTklQL3NjcmlwdHMvcGRmb2JqZWN0LmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KCXZhciBjdHggPSAiL05JUCI7DQoJdmFyIGJhc2VQYXRoID0gImh0dHAiKyI6Ly8iKyIyMDIuMTE2LjEwNC4xNjEiKyI6IisiODAiOyANCgl2YXIgcHJpbnRUeXBlID0gIiI7IC8vMjpuZXcgcHJpbnRfYmFyY29kZQ0KPC9zY3JpcHQ+DQoNCg0KDQoNCg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPg0KPGhlYWQ+DQo8bWV0YSBjb250ZW50PSJJRT0xMC4wMDAiIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgLz4NCjx0aXRsZT7ovr7lronlgaXlurctTklQPC90aXRsZT4NCjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sO2NoYXJzZXQ9dXRmLTgiIC8+DQo8bWV0YSBuYW1lPSJHRU5FUkFUT1IiIGNvbnRlbnQ9Ik1TSFRNTCAxMC4wMC45MjAwLjE2NjE4IiAvPg0KPGxpbmsgaHJlZj0iL05JUC9jc3MvY3NzLmNzcyIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgLz4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9OSVAvc2NyaXB0cy9qcXVlcnktMS44LjIubWluLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgbGFuZ3VhZ2U9IkphdmFTY3JpcHQiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQoNCiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHsNCgkkKCIjdXNlck5hbWUiKS5rZXl1cChmdW5jdGlvbihldmVudCl7DQoJCWlmKGV2ZW50LmtleUNvZGU9PTEzKXsNCgkJCSQoIiNwYXNzd29yZCIpLmZvY3VzKCk7DQoJCX0NCgl9KTsNCgkkKCIjcGFzc3dvcmQiKS5rZXl1cChmdW5jdGlvbihldmVudCl7DQoJCWlmKGV2ZW50LmtleUNvZGU9PTEzKXsNCgkJCWxvZ2luKCk7DQoJCX0NCgl9KTsNCgkNCgkkKCIjdXNlck5hbWUiKS5mb2N1cygpOw0KCQ0KCWRvY3VtZW50Lm9ua2V5ZG93biA9IGZuQmFuQmFja1NwYWNlOw0KfSk7DQovL+eZu+W9lQ0KZnVuY3Rpb24gbG9naW4oKSB7DQoJdmFyIHVzZXJOYW1lPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ1c2VyTmFtZSIpLnZhbHVlOw0KCWlmKHVzZXJOYW1lICE9ICIiKXsNCgkJdmFyIGNoZWNrID0gL1teYS16QS1aMC05XS87DQoJCWlmKGNoZWNrLnRlc3QodXNlck5hbWUpKQ0KCQl7DQoJCQlmYWRlSW5NZXNzYWdlKCLnlKjmiLfotKblj7flj6rog73kuLrlrZfmr43miJbmlbDlrZciKTsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQkNCgl9ZWxzZXsNCgkJcmV0dXJuIGZhbHNlOw0KCX0NCglkb2N1bWVudC5mb3Jtc1swXS5zdWJtaXQoKTsNCn0NCg0KZnVuY3Rpb24gb25DbGVhcigpIHsNCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidXNlck5hbWUiKS52YWx1ZSA9ICIiOw0KICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwYXNzd29yZCIpLnZhbHVlID0gIiI7DQogICAgcmV0dXJuIGZhbHNlOw0KfQ0KDQovL+emgeatouWbnumAgOmUrg0KZnVuY3Rpb24gZm5CYW5CYWNrU3BhY2UoZSkgew0KICAgIHZhciBldiA9IGUgfHwgd2luZG93LmV2ZW50Oy8v6I635Y+WZXZlbnTlr7nosaENCiAgICB2YXIgb2JqID0gZXYudGFyZ2V0IHx8IGV2LnNyY0VsZW1lbnQ7Ly/ojrflj5bkuovku7bmupANCiAgICB2YXIgdCA9IG9iai50eXBlIHx8IG9iai5nZXRBdHRyaWJ1dGUoJ3R5cGUnKTsvL+iOt+WPluS6i+S7tua6kOexu+Weiw0KICAgIC8v6I635Y+W5L2c5Li65Yik5pat5p2h5Lu255qE5LqL5Lu257G75Z6LDQogICAgdmFyIHZSZWFkT25seSA9IG9iai5nZXRBdHRyaWJ1dGUoJ3JlYWRvbmx5Jyk7DQogICAgdmFyIHZFbmFibGVkID0gb2JqLmdldEF0dHJpYnV0ZSgnZW5hYmxlZCcpOw0KICAgIC8v5aSE55CGbnVsbOWAvOaDheWGtQ0KICAgIHZSZWFkT25seSA9ICh2UmVhZE9ubHkgPT0gbnVsbCkgPyBmYWxzZSA6IHZSZWFkT25seTsNCiAgICB2RW5hYmxlZCA9ICh2RW5hYmxlZCA9PSBudWxsKSA/IHRydWUgOiB2RW5hYmxlZDsNCiAgICAvL+W9k+aVskJhY2tzcGFjZemUruaXtu+8jOS6i+S7tua6kOexu+Wei+S4uuWvhueggeaIluWNleihjOOAgeWkmuihjOaWh+acrOeahO+8jA0KICAgIC8v5bm25LiUcmVhZG9ubHnlsZ7mgKfkuLp0cnVl5oiWZW5hYmxlZOWxnuaAp+S4umZhbHNl55qE77yM5YiZ6YCA5qC86ZSu5aSx5pWIDQogICAgdmFyIGZsYWcxID0gKGV2LmtleUNvZGUgPT0gOCAmJiAodCA9PSAicGFzc3dvcmQiIHx8IHQ9PSJ0ZXh0IiANCiAgICAgICAgfHwgdCA9PSJ0ZXh0YXJlYSIpICYmICh2UmVhZE9ubHkgPT0gdHJ1ZSB8fCB2RW5hYmxlZCAhPSB0cnVlKSkgDQogICAgICAgID8gdHJ1ZTpmYWxzZTsNCiAgICAvL+W9k+aVskJhY2tzcGFjZemUruaXtu+8jOS6i+S7tua6kOexu+Wei+mdnuWvhueggeaIluWNleihjOOAgeWkmuihjOaWh+acrOeahO+8jOWImemAgOagvOmUruWkseaViA0KICAgIHZhciBmbGFnMiA9IChldi5rZXlDb2RlID09IDggJiYgdCAhPSAicGFzc3dvcmQiICYmIHQgIT0gInRleHQiIA0KICAgICAgICAmJiB0ICE9ICJ0ZXh0YXJlYSIpID90cnVlOmZhbHNlOw0KICAgIC8v5Yik5patDQogICAgaWYgKGZsYWcyKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCiAgICBpZiAoZmxhZzEpDQogICAgew0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KfQ0KDQovL0RlZmVjdElkOjc3DQppZih3aW5kb3cgIT0gdG9wKSANCgl0b3AubG9jYXRpb24uaHJlZiA9IGxvY2F0aW9uLmhyZWY7DQoNCjwvc2NyaXB0Pg0KPC9oZWFkPg0KPGJvZHkgY2xhc3M9ImJvZHkxIiB0b3BtYXJnaW49IjAiIGxlZnRtYXJnaW49IjAiPg0KCTwhLS0g6IOM5pmv5bGCIC0tPg0KCTxkaXYgY2xhc3M9ImxvZ2luX2RpdjEiIHN0eWxlPSJtaW4td2lkdGg6MTAwM3B4OyI+DQoJCTwhLS0g5YaF5a655Yy6IC0tPg0KCQk8ZGl2IGNsYXNzPSJsb2dpbl9kaXYyXzEiPg0KCQkJPGRpdiBzdHlsZT0id2lkdGg6ODAlO2Zsb2F0OmxlZnQ7Ij4NCgkJCQk8Zm9ybSBuYW1lPSJmcm1Vc2VySW5mbyIgaWQ9ImZybVVzZXJJbmZvIiBhY3Rpb249ImxvZ2luLmFjdGlvbiIgbWV0aG9kPSJwb3N0Ij4NCgkJCQkJPHNwYW4gc3R5bGU9ImNvbG9yOnJlZDtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6LTExcHg7Ij48L3NwYW4+DQoJCQkJCTwhLS0g6LSm5Y+3IC0tPg0KCQkJCQk8ZGl2IGNsYXNzPSJsb2dpbl9kaXYzIj4NCgkJCQkJCTxkaXYgY2xhc3M9ImxvZ2luX2RpdjNfMSI+55So5oi36LSm5Y+377yaPC9kaXY+DQoJCQkJCQk8ZGl2IGNsYXNzPSJsb2dpbl9kaXYzXzIiPg0KCQkJCQkJCTxpbnB1dCBuYW1lPSJ1c2VyTmFtZSIgY2xhc3M9InRleHQxIiBpZD0idXNlck5hbWUiIHR5cGU9InRleHQiIHZhbHVlPSIiLz4NCgkJCQkJCTwvZGl2Pg0KCQkJCQkJPGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pg0KCQkJCQk8L2Rpdj4NCgkJCQkJPCEtLSDotKblj7cgLS0+DQoJDQoJCQkJCTwhLS0g5a+G56CBIC0tPg0KCQkJCQk8ZGl2IGNsYXNzPSJsb2dpbl9kaXYzIiBpZD0iZGl2U2VhcmNoUGFyYW0iPg0KCQkJCQkJPGRpdiBjbGFzcz0ibG9naW5fZGl2M18xIj7nlKjmiLflr4bnoIHvvJo8L2Rpdj4NCgkJCQkJCTxkaXYgY2xhc3M9ImxvZ2luX2RpdjNfMiI+DQoJCQkJCQkJPGlucHV0IG5hbWU9InBhc3N3b3JkIiBjbGFzcz0idGV4dDEiIGlkPSJwYXNzd29yZCIgdHlwZT0icGFzc3dvcmQiIHZhbHVlPSIiLz4NCgkJCQkJCTwvZGl2Pg0KCQkJCQkJPGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pg0KCQkJCQk8L2Rpdj4NCgkJCQkJPCEtLSDlr4bnoIEgLS0+DQoJCQkJCQ0KCQkJCQk8IS0tIOa4hemZpOa1ruWKqCAtLT4NCgkNCgkJCQkJPGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pg0KCQkJCQk8IS0tIOa4hemZpOa1ruWKqCAtLT4NCgkJCQk8L2Zvcm0+DQoJCQk8L2Rpdj4NCgkJCTwhLS0g55m76ZmG5oyJ6ZKuIC0tPg0KCQkJPGRpdiBzdHlsZT0id2lkdGg6MjAlO2Zsb2F0OnJpZ2h0OyI+DQoJCQkJPGlucHV0IG5hbWU9ImJ0biIgdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnV0dG9uMSIgaWQ9ImJ0bl9sb2dpbiIgb25jbGljaz0ibG9naW4oKSIvPg0KCQkJPC9kaXY+DQoJCQk8IS0tIOeZu+mZhuaMiemSriAtLT4NCgkJCQ0KCQk8L2Rpdj4NCgkJPCEtLSDlhoXlrrnljLogLS0+DQoJCTxkaXYgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgY29sb3I6IHdoaXRlOyBtYXJnaW4tdG9wOiAxMjBweDsiPueJiOadg+aJgOacie+8muW5v+W3nui+vuWuieS4tOW6iuajgOmqjOS4reW/g+aciemZkOWFrOWPuCZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzE4OTIyMTE5MTYx77yIVFPpg6jpl6jvvIkNCgkJCTxwLz48YSBocmVmPSJodHRwOi8vd3d3Lm1paXRiZWlhbi5nb3YuY24iIHRhcmdldD0iX2JsYW5rIj7lpIfmoYjlj7c657KkSUNQ5aSHMTIwNTk1NDXlj7ctMTY8L2E+DQoJCTwvZGl2Pg0KCTwvZGl2Pg0KCTwhLS0g6IOM5pmv5bGCIC0tPg0KPC9ib2R5Pg0KPC9odG1sPg0K</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
    <HTTPTask id="2" hostname="202.116.104.161" path="/NIP/scripts/pdfobject.js" url="http://202.116.104.161/NIP/scripts/pdfobject.js" ip="202.116.104.161" port="80" connectionId="2080" origin="HTML" ordinal="1" startTime="372" endTime="383">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovLzIwMi4xMTYuMTA0LjE2MS9OSVAvbG9naW4uYWN0aW9u</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>emgtQ04=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAyLjExNi4xMDQuMTYx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD1ERUQwNkNFQzE0N0NBOEQzNEE1MzcxNTc4NzQyRjhCQw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9OSVAvc2NyaXB0cy9wZGZvYmplY3QuanMgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly8yMDIuMTE2LjEwNC4xNjEvTklQL2xvZ2luLmFjdGlvbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHpoLUNODQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogMjAyLjExNi4xMDQuMTYxDQpDb29raWU6IEpTRVNTSU9OSUQ9REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkMNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbngvMS4xNC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NTU0Mg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Vy8iNTU0Mi0xNTI4MzY5ODY4MDAwIg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAwNyBKdW4gMjAxOCAxMToxMTowOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTQuMA0KRGF0ZTogRnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNTU0Mg0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkVUYWc6IFcvIjU1NDItMTUyODM2OTg2ODAwMCINCkxhc3QtTW9kaWZpZWQ6IFRodSwgMDcgSnVuIDIwMTggMTE6MTE6MDggR01UDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>LyogUERGT2JqZWN0LCBjb3B5cmlnaHQgKEMpIDIwMDggUGhpbGlwIEh1dGNoaXNvbiAocGlwd2Vya3MuY29tKS4gRG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZXMgYXJlIGF0IHd3dy5wZGZvYmplY3QuY29tLiBWZXJzaW9uIDEuMiwgQXByaWwgMjAxMS4gTUlUIHN0eWxlIGxpY2Vuc2UgKi8KdmFyIFBERk9iamVjdCA9IGZ1bmN0aW9uKHkpIHsKCWlmICgheSB8fCAheS51cmwpIHsKCQlyZXR1cm4gZmFsc2U7Cgl9Cgl2YXIgdyA9ICIxLjIiLCBiID0geS5pZCB8fCBmYWxzZSwgaSA9IHkud2lkdGggfHwgIjEwMCUiLCB6ID0geS5oZWlnaHQKCQkJfHwgIjEwMCUiLCByID0geS5wZGZPcGVuUGFyYW1zLCBhLCB4OwoJdmFyIHYgPSBmdW5jdGlvbigpIHsKCQkvL3ZhciBjID0gbnVsbDsKLy8JCWlmICh3aW5kb3cuQWN0aXZlWE9iamVjdCkgewovLwkJCXRyeSB7IAovLwkJCQljID0gbmV3IEFjdGl2ZVhPYmplY3QoIkFjcm9QREYuUERGIik7Ci8vCQkJCWlmICghYykgewovLwkJCQkJYyA9IG5ldyBBY3RpdmVYT2JqZWN0KCJQREYuUGRmQ3RybCIpOwovLwkJCQl9Ci8vCQkJfSBjYXRjaCAoZSkgeyAKLy8JCQl9IAovLwkJCWlmIChjICE9PSBudWxsKSB7Ci8vCQkJCXJldHVybiB0cnVlOwovLwkJCX0KLy8JCX0KCQlpZiAod2luZG93LkFjdGl2ZVhPYmplY3QpIHsKCQkJZm9yICh4ID0gMjsgeCA8IDEwOyB4KyspIHsKCQkJCXRyeSB7CgkJCQkJb0Fjcm8gPSBldmFsKCJuZXcgQWN0aXZlWE9iamVjdCgnUERGLlBkZkN0cmwuIiArIHggKyAiJyk7Iik7CgkJCQkJaWYgKG9BY3JvKSB7CgkJCQkJCXJldHVybiB0cnVlOwoJCQkJCX0KCQkJCX0gY2F0Y2ggKGUpIHsKCQkJCX0KCQkJfQoKCQkJdHJ5IHsKCQkJCW9BY3JvNCA9IG5ldyBBY3RpdmVYT2JqZWN0KCJQREYuUGRmQ3RybC4xIik7CgkJCQlpZiAob0Fjcm80KSB7CgkJCQkJcmV0dXJuIHRydWU7CgkJCQl9CgkJCX0gY2F0Y2ggKGUpIHsKCQkJfQoKCQkJdHJ5IHsKCQkJCW9BY3JvNyA9IG5ldyBBY3RpdmVYT2JqZWN0KCdBY3JvUERGLlBERi4xJyk7CgkJCQlpZiAob0Fjcm83KSB7CgkJCQkJcmV0dXJuIHRydWU7CgkJCQl9CgkJCX0gY2F0Y2ggKGUpIHsKCQkJfQoJCQkKLy8JCQl0cnkgeyAKLy8JCQkJdmFyIGMgPSBudWxsOwovLwkJCQljID0gbmV3IEFjdGl2ZVhPYmplY3QoIkFjcm9QREYuUERGIik7Ci8vCQkJCWlmICghYykgewovLwkJCQkJYyA9IG5ldyBBY3RpdmVYT2JqZWN0KCJQREYuUGRmQ3RybCIpOwovLwkJCQkJcmV0dXJuIHRydWU7Ci8vCQkJCX0KLy8JCQl9IGNhdGNoIChlKSB7IAovLwkJCX0gCgkJfQoJCXJldHVybiBmYWxzZTsKCX07Cgl2YXIgdSA9IGZ1bmN0aW9uKCkgewovLwkJdmFyIGMsIGYgPSBuYXZpZ2F0b3IucGx1Z2lucywgZCA9IGYubGVuZ3RoLCBlID0gL0Fkb2JlIFJlYWRlcnxBZG9iZSBQREZ8QWNyb2JhdC9naTsKLy8JCWZvciAoYyA9IDA7IGMgPCBkOyBjKyspIHsKLy8JCQlpZiAoZS50ZXN0KGZbY10ubmFtZSkpIHsKLy8JCQkJcmV0dXJuIHRydWU7Ci8vCQkJfQovLwkJfQoJCWlmIChuYXZpZ2F0b3IucGx1Z2lucyAmJiBuYXZpZ2F0b3IucGx1Z2lucy5sZW5ndGgpIHsKCQkJZm9yICh4ID0gMDsgeCA8IG5hdmlnYXRvci5wbHVnaW5zLmxlbmd0aDsgeCsrKSB7CgkJCQlpZiAobmF2aWdhdG9yLnBsdWdpbnNbeF0uZGVzY3JpcHRpb24uaW5kZXhPZigiQWRvYmUgQWNyb2JhdCIpICE9IC0xKSB7CgkJCQkJcmV0dXJuIHRydWU7CgkJCQkJYnJlYWs7CgkJCQl9IGVsc2UgaWYgKG5hdmlnYXRvci5wbHVnaW5zW3hdLmRlc2NyaXB0aW9uLmluZGV4T2YoIkFkb2JlIFBERiBQbHVnLUluIikgIT0gLTEpIHsKCQkJCQlyZXR1cm4gdHJ1ZTsKCQkJCX0KCQkJfQoJCX0KCQlyZXR1cm4gZmFsc2U7Cgl9OwoJdmFyIHQgPSBmdW5jdGlvbigpIHsKCQl2YXIgYyA9IG5hdmlnYXRvci5taW1lVHlwZXNbImFwcGxpY2F0aW9uL3BkZiJdOwoJCXJldHVybiAoYyAmJiBjLmVuYWJsZWRQbHVnaW4pOwoJfTsKCXZhciBzID0gZnVuY3Rpb24oKSB7CgkJdmFyIGMgPSBudWxsOwoJCWlmICh1KCkgfHwgdigpKSB7CgkJCWMgPSAiQWRvYmUiOwoJCX0gZWxzZSB7CgkJCWlmICh0KCkpIHsKCQkJCWMgPSAiZ2VuZXJpYyI7CgkJCX0KCQl9CgkJcmV0dXJuIGM7Cgl9OwoJdmFyIHEgPSBmdW5jdGlvbigpIHsKCQl2YXIgZSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJodG1sIik7CgkJaWYgKCFlKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgkJdmFyIGMgPSBlWzBdLnN0eWxlLCBkID0gZG9jdW1lbnQuYm9keS5zdHlsZTsKCQljLmhlaWdodCA9ICIxMDAlIjsKCQljLm92ZXJmbG93ID0gImhpZGRlbiI7CgkJZC5tYXJnaW4gPSAiMCI7CgkJZC5wYWRkaW5nID0gIjAiOwoJCWQuaGVpZ2h0ID0gIjEwMCUiOwoJCWQub3ZlcmZsb3cgPSAiaGlkZGVuIjsKCX07Cgl2YXIgcCA9IGZ1bmN0aW9uKGQpIHsKCQl2YXIgYyA9ICIiLCBlOwoJCWlmICghZCkgewoJCQlyZXR1cm4gYzsKCQl9CgkJZm9yIChlIGluIGQpIHsKCQkJaWYgKGQuaGFzT3duUHJvcGVydHkoZSkpIHsKCQkJCWMgKz0gZSArICI9IjsKCQkJCWlmIChlID09PSAic2VhcmNoIikgewoJCQkJCWMgKz0gZW5jb2RlVVJJKGRbZV0pOwoJCQkJfSBlbHNlIHsKCQkJCQljICs9IGRbZV07CgkJCQl9CgkJCQljICs9ICImIjsKCQkJfQoJCX0KCQlyZXR1cm4gYy5zbGljZSgwLCBjLmxlbmd0aCAtIDEpOwoJfTsKCXZhciBvID0gZnVuY3Rpb24oZCkgewoJCXZhciBjID0gbnVsbDsKCQlzd2l0Y2ggKGQpIHsKCQljYXNlICJ1cmwiOgoJCQljID0gYTsKCQkJYnJlYWs7CgkJY2FzZSAiaWQiOgoJCQljID0gYjsKCQkJYnJlYWs7CgkJY2FzZSAid2lkdGgiOgoJCQljID0gaTsKCQkJYnJlYWs7CgkJY2FzZSAiaGVpZ2h0IjoKCQkJYyA9IHo7CgkJCWJyZWFrOwoJCWNhc2UgInBkZk9wZW5QYXJhbXMiOgoJCQljID0gcjsKCQkJYnJlYWs7CgkJY2FzZSAicGx1Z2luVHlwZUZvdW5kIjoKCQkJYyA9IHg7CgkJCWJyZWFrOwoJCWNhc2UgInBkZm9iamVjdHZlcnNpb24iOgoJCQljID0gdzsKCQkJYnJlYWs7CgkJfQoJCXJldHVybiBjOwoJfTsKCXZhciBuID0gZnVuY3Rpb24oZCkgewoJCXZhciBjID0gbnVsbDsKCQl2YXIgbm90ZT0nPHA+SXQgYXBwZWFycyB5b3UgZG8gbm90IGhhdmUgYSBQREYgcGx1Z2luIGZvciB0aGlzIGJyb3dzZXIuTm8gYmlnZ2llLi4uIHlvdSBjYW4gPGEgaHJlZj0iJyArIGEgKyAnIj5jbGljayBoZXJlIHRvIGRvd25sb2FkIHRoZSBQREYgZmlsZS48L2E+PC9wPic7CgkJaWYgKGQpIHsKCQkJYyA9IChkLm5vZGVUeXBlICYmIGQubm9kZVR5cGUgPT09IDEpID8gZCA6IGRvY3VtZW50CgkJCQkJLmdldEVsZW1lbnRCeUlkKGQpOwoJCQlpZiAoIWMpIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoJCX0gZWxzZSB7CgkJCWMgPSBkb2N1bWVudC5ib2R5OwoJCQlxKCk7CgkJCWkgPSAiMTAwJSI7CgkJCXogPSAiMTAwJSI7CgkJfQoJCWlmICgheCkgewoJCQkvL2MuaW5uZXJIVE1MID0gbm90ZTsKCQkJLy9yZXR1cm4gYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgicCIpWzBdOwoJCQlhbGVydCgi6K+35YWI5a6J6KOFRmxhc2jmj5Lku7bmiY3lj6/ku6XpooTop4giKTsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCQkvL2MuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIm9iamVjdCIpWzBdCgkJYy5pbm5lckhUTUwgPSAnPG9iamVjdCBpZD0iUERGMSIgbmFtZT0iUERGMSIgZGF0YT0iJyArIGEgKyAnIiB0eXBlPSJhcHBsaWNhdGlvbi9wZGYiIHdpZHRoPSInCgkJKyBpICsgJyIgaGVpZ2h0PSInICsgeiArICciPjwvb2JqZWN0Pic7Cgl9OwoJYSA9IGVuY29kZVVSSSh5LnVybCkgKyAiIyIgKyBwKHIpOwoJeCA9IHMoKTsKCXRoaXMuZ2V0ID0gZnVuY3Rpb24oYykgewoJCXJldHVybiBvKGMpOwoJfTsKCXRoaXMuZW1iZWQgPSBmdW5jdGlvbihjKSB7CgkJcmV0dXJuIG4oYyk7Cgl9OwoJcmV0dXJuIHRoaXM7Cn07CgpmdW5jdGlvbiBlbWJlZFBERih1cmwsaWQpewoJdmFyIG15UERGID0gbmV3IFBERk9iamVjdCh7IAoJICAgICB1cmw6IHVybCwKCSAgICB3aWR0aDonMTAwJScsCgkgICAgaGVpZ2h0OicxMDAlJywKCSAgICAgcGRmT3BlblBhcmFtczogewoJICAgIAkgbmF2cGFuZXM6MCwKCSAgICAJIHRvb2xiYXI6MCwKCSAgICAgfQoJfSkuZW1iZWQoaWQpOwoJLy9QREYxLlNldFNob3dUb29sYmFyKHRydWUpOwp9CgpmdW5jdGlvbiBzdGF0ZUNoYW5nZShvYmopewoJYWxlcnQoJ2luJyk7CglhbGVydChvYmoucmVhZHlTdGF0ZSk7CglpZihvYmoucmVhZHlTdGF0ZT09Mil7Ly/kuZ/mnInlj6/og73mmK8y77yMCgkJYWxlcnQoIuWKoOi9veWujOaIkO+8gSIpOwoJfQp9CgpmdW5jdGlvbiBwcmludFBkZihwcmludFZpZXdJbWdVcmwscHdpZHRoLHBoZWlndGgsdGl0bGUscHJlVXJsLGZ1bmMpIHsKCSAgICB2YXIgZGh4V2lucyA9IG5ldyBkaHRtbFhXaW5kb3dzKCk7CgkgICAgZGh4V2lucy5zZXRJbWFnZVBhdGgocHJlVXJsKyIvc2NyaXB0cy9kaHRtbHhTdWl0ZS9kaHRtbHhfc3RkX2Z1bGwvaW1ncy8iKTsKCSAgICAvL3ZhciBkaHhXaW5zID0gcGFyZW50Lm5pcERoeFdpbnM7CgkJZGh4V2lucy5lbmFibGVBdXRvVmlld3BvcnQodHJ1ZSk7CgkJdmFyIHdpZHRoID0gJChwYXJlbnQuZG9jdW1lbnQuYm9keSkud2lkdGgoKTsKCQl2YXIgaGVpZ2h0ID0gJChwYXJlbnQuZG9jdW1lbnQuYm9keSkuaGVpZ2h0KCk7CgkJaWYocHdpZHRoIT1udWxsICYmIHB3aWR0aCE9IiIpewoJCQl3aWR0aCA9IHB3aWR0aDsKCQl9CgkJaWYocGhlaWd0aCE9bnVsbCAmJiBwaGVpZ3RoIT0iIil7CgkJCWhlaWdodCA9IHBoZWlndGg7CgkJfQoJCS8vdmFyIHggPSAoJChwYXJlbnQuZG9jdW1lbnQuYm9keSkud2lkdGgoKSAtIHdpZHRoKSAvIDI7CgkJLy92YXIgeSA9ICgkKHBhcmVudC5kb2N1bWVudC5ib2R5KS5oZWlnaHQoKSAtIGhlaWdodCkgLyAyOwoJCXZhciBwcmludFdpbiA9IGRoeFdpbnMuY3JlYXRlV2luZG93KCJwcmludFZpZXdJbWciLCAwLCAwLCB3aWR0aCwgaGVpZ2h0KTsvLyDoh6rlrprkuYnkvY3nva7lkozlrr3luqbjgIHpq5jluqYKCQlwcmludFdpbi5jZW50ZXIoKTsKCQlpZih0aXRsZT09bnVsbHx8dGl0bGU9PSIiKXsKCQkJcHJpbnRXaW4uc2V0VGV4dCgi6aKE6KeIIik7CgkJfWVsc2V7CgkJCXByaW50V2luLnNldFRleHQodGl0bGUpOwoJCX0KCQl2YXIgdXJsID1wcmVVcmwrIi9yZWYvcGRmT2JqZWN0V2luLmFjdGlvbj9wcmludFZpZXdJbWdVcmw9IitwcmludFZpZXdJbWdVcmw7CgkJLy9wcmludFdpbi5idXR0b24oIm1pbm1heDEiKS5oaWRlKCk7CgkJcHJpbnRXaW4uYnV0dG9uKCJwYXJrIikuaGlkZSgpOwoJCS8vcHJpbnRXaW4uZGVueVJlc2l6ZSgpOwoJCS8vcHJpbnRXaW4uZGVueVBhcmsoKTsKCQlwcmludFdpbi5hdHRhY2hVUkwodXJsKTsKCQlwcmludFdpbi5zZXRNb2RhbCh0cnVlKTsKCQlpZih0eXBlb2YoZnVuYykhPSJ1bmRlZmluZWQiKXsKCQkJZGh4V2lucy5hdHRhY2hFdmVudCgib25DbG9zZSIsZnVuY3Rpb24od2luKXsKCQkJCXByaW50V2luLmhpZGUoKTsKCQkJCXByaW50V2luLnNldE1vZGFsKGZhbHNlKTsKCQkJCWZ1bmMoKTsKCQkJfSk7CgkJfQp9Cg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3" hostname="202.116.104.161" path="/NIP/css/css.css" url="http://202.116.104.161/NIP/css/css.css" ip="202.116.104.161" port="80" connectionId="2056" origin="HTML" ordinal="2" startTime="373" endTime="387">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovLzIwMi4xMTYuMTA0LjE2MS9OSVAvbG9naW4uYWN0aW9u</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>emgtQ04=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAyLjExNi4xMDQuMTYx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD1ERUQwNkNFQzE0N0NBOEQzNEE1MzcxNTc4NzQyRjhCQw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9OSVAvY3NzL2Nzcy5jc3MgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly8yMDIuMTE2LjEwNC4xNjEvTklQL2xvZ2luLmFjdGlvbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHpoLUNODQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogMjAyLjExNi4xMDQuMTYxDQpDb29raWU6IEpTRVNTSU9OSUQ9REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkMNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbngvMS4xNC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M7Y2hhcnNldD1VVEYtOA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Transfer-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y2h1bmtlZA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Vy8iMTI0NDUtMTUzMDg1ODk4NDAwMCI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNiBKdWwgMjAxOCAwNjozNjoyNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTQuMA0KRGF0ZTogRnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9jc3M7Y2hhcnNldD1VVEYtOA0KVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWQNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRVRhZzogVy8iMTI0NDUtMTUzMDg1ODk4NDAwMCINCkxhc3QtTW9kaWZpZWQ6IEZyaSwgMDYgSnVsIDIwMTggMDY6MzY6MjQgR01UDQpDb250ZW50LUVuY29kaW5nOiBnemlwDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="4" hostname="202.116.104.161" path="/NIP/scripts/jquery-1.8.2.min.js" url="http://202.116.104.161/NIP/scripts/jquery-1.8.2.min.js" ip="202.116.104.161" port="80" connectionId="2080" origin="HTML" ordinal="3" startTime="373" endTime="421">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovLzIwMi4xMTYuMTA0LjE2MS9OSVAvbG9naW4uYWN0aW9u</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>emgtQ04=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjAyLjExNi4xMDQuMTYx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD1ERUQwNkNFQzE0N0NBOEQzNEE1MzcxNTc4NzQyRjhCQw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9OSVAvc2NyaXB0cy9qcXVlcnktMS44LjIubWluLmpzIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vMjAyLjExNi4xMDQuMTYxL05JUC9sb2dpbi5hY3Rpb24NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMjsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNC41Ny4yIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi81LjEuNyBTYWZhcmkvNTM0LjU3LjINCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiB6aC1DTg0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IDIwMi4xMTYuMTA0LjE2MQ0KQ29va2llOiBKU0VTU0lPTklEPURFRDA2Q0VDMTQ3Q0E4RDM0QTUzNzE1Nzg3NDJGOEJDDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbngvMS4xNC4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Mjc3OTc4</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Vy8iMjc3OTc4LTE1MzA4NTkwODIwMDAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAwNiBKdWwgMjAxOCAwNjozODowMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTQuMA0KRGF0ZTogRnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMjc3OTc4DQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KRVRhZzogVy8iMjc3OTc4LTE1MzA4NTkwODIwMDAiDQpMYXN0LU1vZGlmaWVkOiBGcmksIDA2IEp1bCAyMDE4IDA2OjM4OjAyIEdNVA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
  <HTTPTask id="5" hostname="202.116.104.161" path="/NIP/images/new/bgd_login_2.jpg" url="http://202.116.104.161/NIP/images/new/bgd_login_2.jpg" ip="202.116.104.161" port="80" connectionId="2056" origin="ExtraRes" ordinal="1" startTime="373" endTime="391">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzIwMi4xMTYuMTA0LjE2MS9OSVAvbG9naW4uYWN0aW9u</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>emgtQ04=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAyLjExNi4xMDQuMTYx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SlNFU1NJT05JRD1ERUQwNkNFQzE0N0NBOEQzNEE1MzcxNTc4NzQyRjhCQw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9OSVAvaW1hZ2VzL25ldy9iZ2RfbG9naW5fMi5qcGcgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly8yMDIuMTE2LjEwNC4xNjEvTklQL2xvZ2luLmFjdGlvbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHpoLUNODQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogMjAyLjExNi4xMDQuMTYxDQpDb29raWU6IEpTRVNTSU9OSUQ9REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkMNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="JSESSIONID" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbngvMS4xNC4w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aW1hZ2UvanBlZw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTM5OTc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwNyBKdW4gMjAxOCAxMToxMDowMyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ETag" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IjViMTkxMjhiLTM2YWQi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U3VuLCAwOSBEZWMgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0yNTkyMDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTQuMA0KRGF0ZTogRnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQNCkNvbnRlbnQtVHlwZTogaW1hZ2UvanBlZw0KQ29udGVudC1MZW5ndGg6IDEzOTk3DQpMYXN0LU1vZGlmaWVkOiBUaHUsIDA3IEp1biAyMDE4IDExOjEwOjAzIEdNVA0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KRVRhZzogIjViMTkxMjhiLTM2YWQiDQpFeHBpcmVzOiBTdW4sIDA5IERlYyAyMDE4IDA5OjI0OjUzIEdNVA0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0yNTkyMDAwDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="6" hostname="202.116.104.161" path="/NIP/images/new/bgd_login3_0.jpg" url="http://202.116.104.161/NIP/images/new/bgd_login3_0.jpg" ip="202.116.104.161" port="80" connectionId="2056" origin="ExtraRes" ordinal="2" startTime="373" endTime="401">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzIwMi4xMTYuMTA0LjE2MS9OSVAvbG9naW4uYWN0aW9u</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>emgtQ04=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAyLjExNi4xMDQuMTYx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SlNFU1NJT05JRD1ERUQwNkNFQzE0N0NBOEQzNEE1MzcxNTc4NzQyRjhCQw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9OSVAvaW1hZ2VzL25ldy9iZ2RfbG9naW4zXzAuanBnIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vMjAyLjExNi4xMDQuMTYxL05JUC9sb2dpbi5hY3Rpb24NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMjsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNC41Ny4yIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi81LjEuNyBTYWZhcmkvNTM0LjU3LjINCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiB6aC1DTg0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IDIwMi4xMTYuMTA0LjE2MQ0KQ29va2llOiBKU0VTU0lPTklEPURFRDA2Q0VDMTQ3Q0E4RDM0QTUzNzE1Nzg3NDJGOEJDDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="JSESSIONID" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbngvMS4xNC4w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aW1hZ2UvanBlZw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NTU3MTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwNyBKdW4gMjAxOCAxMToxMDowMyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ETag" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IjViMTkxMjhiLWQ5YTYi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U3VuLCAwOSBEZWMgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0yNTkyMDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTQuMA0KRGF0ZTogRnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQNCkNvbnRlbnQtVHlwZTogaW1hZ2UvanBlZw0KQ29udGVudC1MZW5ndGg6IDU1NzE4DQpMYXN0LU1vZGlmaWVkOiBUaHUsIDA3IEp1biAyMDE4IDExOjEwOjAzIEdNVA0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KRVRhZzogIjViMTkxMjhiLWQ5YTYiDQpFeHBpcmVzOiBTdW4sIDA5IERlYyAyMDE4IDA5OjI0OjUzIEdNVA0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0yNTkyMDAwDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAPAAA/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgChwPrAwERAAIRAQMRAf/EANEAAQABBQEBAAAAAAAAAAAAAAAEAgMFBgcBCAEBAAMBAQEBAAAAAAAAAAAAAAECAwQFBgcQAAEDAwIDBAUHBwcJBAkEAwABAhIRAwQTBSFhBjFBUSJxkTIUB4HRQlIVVRehsWIj05SkwXKCMyQmCOGSstKjdLR1FqJDU7Pw8WNzk8NEVDWDZCVF1GU2EQEAAgIABAMEBwcCAwYFBQAAARECAyExEgRREwVBoSIUYXGBkTJSFfCxwdHhMwbxQmJyI4KSorLCU9LiQyQWc6M0VCX/2gAMAwEAAhEDEQA/APqmieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieACieAAAAAAAAAAAAAAAAAAAAAAAAAAAAACiAKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AKJ4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeSASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASASAtSCpIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBIBICxMIsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLR5hSyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgsmCyYLJgtG1OZCtmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWi6gVs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBaJqBSzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFomrzCtmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWavMFmrzBZq8wWiapVSzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFoWqFLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWh6oUs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBaFrcwzs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmC0PV5hSzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLQtbmFLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gs1uYLNbmCzW5gtC1QpZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QW91AW9RyqFntXAeK9UCrzVBbzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLRNXmFbNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNRQWrZVwEyxivf3BeMWTsbS9yeyGsYLz9mejfZFJ8tjsvCdbrVAzyxYy6sVDOVvVCLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLNXmCzV5gs1eYLQ9UKWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgtU1yqBLx8d717AvEM3gbQ96p5Q3x1to23p5VpVpNOnDU2TD6faiJ5SadOOpKyen1baVVtrTxoF51NP33bG20ctCrj24NE3FqMeocGbGLdSoZ2aoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqCzVBZqgs1QWaoLNUFmqC0TVUhQ1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGooF61jZt3+qsXLn81jl/MgpFrybTvK8UwMj/wCFc+YVJ1QouYG520rcxLzETvdben50FSWjK9zVoqUXwUhNmqpIaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqSCPVQK0R6hZet2Ljl7ARDJ4W23HqnANccG17T0+5yoqtFOrXqbntfT6NRKtJp24amx2dvxsSw6/kObZtW2ye96o1rWp2qqrwQl0xhERcsbidUrur1t9L4fvthFVrt4vVt4SKnBdN1NS//APppH9NBamO7q/BH2+z+rMo67i4dxuZle9ZD6q5yNS2xKpSjG1dRqc3KvMlpdRxloXU2Tbi6ilZcG7JzHd76K91FIeZslhlu8Qxs1VIDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqA1VAaqgNVQGqoDVUBqqBE1CFLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFs1s3Sm97qrXWLOnYX/AL675W05d7vkLRjMonKIbttvww26wxLu5X1ur3pXTZ/rflNIwV65Z3G2/pbASmNisc5PpMYir/nO4loiFepL+07bU/V4qIn6S/MhZFqfta73Wrf5fnIOp79qu+njsVOVU+cktZvv2XLRW5eE11fFrX/noRRbD5vQfS2eiriO92ur2IxVb/2XVQrOELRm1Lefh5vmBJ+OiZdpPqeV9P5q9vrM5wlaM2q3J23qy41WPatHNclFReaKQtanUKlmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFq21cWWSrOK9/cExiyOPtNx9OAaRrZTG6fuOp5Q1jUy+J0y9VTyhtjpbJtnTNFSrSadOGlt+2bGjUTy/KS68NTE9V/EfYOmbrNrxLb936ivKjcfacTz3JqnDUVKwT8vIiZpnu7vDXPTHxZeELO3dFb51Bet7p19kNvtRUuY3TWOqpg2O9NdK/2i4n6XlRa0qgrxMO3yz+Lb/3fZ/Vt2Vl28a0lu0iW7bERrWNRERETgiIiFnTllTU9536COSpDk2bXPt93tbiuSpV5+3Y0zMyle5Q48pQ5KFSSgeTIVeo5VISebwLJKuA8mpCr2SkrHm8APfN4AeK5UAp1CqtmoCzUBb2YLJqCyYLJkj3z+HADyTq0pxA98/gBVG54AeKj07gPPP4dgHqo9O4DxJr2IoHknVpTiQW9VXJ2oqAt5J3gSEwPNQD2agJqAmoCageagDUAahBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWjagVs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAs1AWagLNQFmoCzUBaVtu3525ZKY+HaW7cXtp2NTxcvchMRaJl0/pz4fbbt1tuXuTm3rzeKuf/VtX9Fq9qmsYKTlbZHbitNPBtRanDVcnH5Gmitr2Jsm5bg5Lio56L/3txaN+T/IRbo0drs2/hjh4+xnsTpHEYiLkXFuL9Vnlb/K4r1PV1ek4x+Ob+pk7O0bbZ/q8a3VPpK2S+taqRcu7Ds9WPLGP3/vWc67fRFtYlpW09u6jOz+bwLQ4u73ZR8OrH7a/cwd3bVSqvYqKvFVVFJp4uWrKOcIl3bGr2IQzmEG/tz21ohNoWmZebjeVVnb+o/inzoSWibrsew9QW43raWcylGPSiPr+i76XoUpONpjJzLqTpTc9juqt1uriqtGZDU4ehyfRUynGmkZWweoVWs1AWagLNQFmoCzUCDUAagDUAagDUAagDUCbNQFmoCzUBZqAs1AWagLNQFmoCzUBZqAtfsMV6haGc27aX3VTgWb4a7bbtfTDnUq0U68NLaMDpVqIlWE06sdDPYnTTEpRlfkJpvjpZXH6eRv0KekNY1MjY2u3bpWhLSMHN/iF1V8QczJXpzo3Zs3Hbcfo398u2nWmceC6T3oiNb/AO0X+j3KVmZef3W7bM9GrH7We+Hfwv2vpGwuTcd7/v2TVc3c7iVcqu4ubblVWtr297u8RjTftOzx1RfPL2y3W9WJZ2S1zeJxdQhzbGg7zavuV3aVcGyJafn7ffcq8FDjywliX7TdV3YoZeWu29kuKnshMa3l3ZLiJ7IJ1oy7Tcr7IV8tJsbJcd9ELRrS06fuU9n8hFLeUs3tiuN+iSidSG7aLiL7IU8tfsbHddTyr6gtGtPtdL5T04WnL8hFLeUvJ0bnu7LKpzUUnylu50RuFFqjW08SWc60R/RmS1fPdanyFWUw9b0jaRfNfX5EDNdb0tgItXXHOCbXWdN7Yi9jl8OILSGdPbYnZaWvfxCUi309t/0bCIWWjFLt9P4XdjN9QXjBd/6exE4pjt9QT5a27Y8VP+4b6gicHrNlxl4aDfUCMFxOn8Sn9Q1PkC3lqV2DETsx2+oI8tQ7p/EXtsJ8gR0KF6bwf/ASviDoUO6ZwV7bVQdC2vS2DXgxUCOhSvSWEvYjkX01B0PP+jsdfpuCehS7oxF7LlfSgT5a2/ou4vBrm09APLW16JyO5rV9Cg8tS7ozJT/uqpyUJ8tZudIZDe209E5cQeXKLd6ZutRVVrkp+iETrRLmw3U76elFQK9ChdiyE7ERfQDoULsuUn0K+gHQp+ychO1i+oHRKldtup9FQdCn7PueBVHQO2+4idhY6Ua5ZczuCsws8alULtuy9/cExCUzb7jk7Cy0YvX7dcROwJnBFu2Hs7iqkwsOcqBR5qBNmoCzUBZqAs1AWagLNQFmoCzUBaNqcwpZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWanMFmpzBZqcwWynT+x5u9ZqY+OlLaUW9eVODU+cmItE5U7BtO07X09hNs2bcr7uMfpvX6z18DaIZzknY+JnblkNki3H/AEWJwa1P5EJX168tmVYxxbbtvTmJiNS5k0u3U40X2G/Ivb8pFve7b0zDDjnxn3f1SN03mxgUYra3FbKPZRCccLelOVNdyesL71cjHR8Ebw4/nNY1wp1yY2/7hco+TpJ3px/MOmFoyln8Hfbr7SuvcacOPeZzjDSMmUt51m5bW8jkaxqUci9ylZxWtGczEvcbiMci96J/Kg4sdnb68+cQi3dlxrrFdZuo131XdnrFvN3ek4zxwmmCz9pfbWj20r2KnFF9CoS8bf2+euayhgczAcxVVotzrbcy1etuw9xaly05IzclaIvc76yCi3Oeteiru0vdm4KK/Adxc1OK2699e9plli0xyafqcyi1mpzBb2ahNiPBb2SgskoLV2rd689Ldpi3Hr2NalV/IC2z7T8PN+zouutTGtr9fi7/ADULxhKs5toxvhjsuMiOz8lz3J2orkYnqTiWjCFZzlkbXTnRdhERuK28qd6sl/pFumEdUrv2Z0kif/irS/8A6Vr5h0wdUqH7R0dcSjttYzm22xP9Gg6YOpCyOiOj8r+qcuO5eyiq389UI6IOqWE3L4XZTWrc2/Kbdb2o1/8ArNKzgtGbT9y2bddterczHdbRPp0q1fQ5OBScZhaJQZqQkmoCYCagsmB5qKEWrtuq4JhsOy4eq9vAs6deNumdO7AjkaqtJiHpadToG2bA1GIsURPFSaehhqVXN32rHetjDs3dzyWrR1rDZqIip3PuKrbTKfpPqVnOPYpl3GETWMTnl9H8+Ufepc7rrLpoWcHaLK995z8u8n9C3pW0/wA9SPilSZ7nPlGOEfT8U+6o96Fk9I71ftPfunVmc22iK53ujbOGxrU4rxRrnoifzyPLmecs8uy2ZR8e3L7Kxcg3TqnpXI6gbs2yWN46ku3HpZtZK7hcZrXe/TSKyan1lonf2cSk64+n73j7Neqc+jHzM/8AtOjM+D9q5i27rN13Dbc1zEW5Zt5K37THL2tRytY91PShPkR4y7p9ExmLjPPGfrth906f+LPSrHZe17xc3jCteZ9t1blyKdtbV2aqn8x9Sk4548ptxbu177to6sM5zx++fum/cm9G/GnE3C9bweoLTMO/cVG28y2qpZc5VpR6O4s9NVT0FsN982/YevY7J6NsdOXj7P6OhZuCj08UXsU6HvZYsHlbC25WrSGGWpicnpZjq+UimWWhBXpJsvY/IKZ+Qk2elGInsfkFLxoeX+lGqnsCkToQV6RSXsfkFKeQn4nR68P1frFL46GUt9IWqeaiehBTTyXr+ksFO23JeYpWdCI/o/b1fLQSv5BTKdCZjdOYzEo2y1E9ApfHQns2ZiJ7KJ8gppGkds7VT2SaJ0sfm7I5WrG2q/IRTDZpa5n7DmdqWqIve5Ub66kPP266YS/td9iSdcsNbxoq3WrWnbSngVceUI7MfFcqIu44yK5Ko1FV3qVECtrlmzt6vj7+1/DywtPWvKtO0LYwy+HteFcaxyZFx0qoiJaVFRfBalnThrtl8fY8RzUX+0V7/IiJ6hTqx0Mja2DHpwS7VPFqUUmm+OhfXYsRaJp3Ur9Lh+YUv5CNc2LGqtLN7h4UovoIpnPbvbew4yqiQvJX6XDh6SaTGhJbsOOiKituOp2OREQU0jQ8XYcVUrS4lO6iVFInt1p2wY3ajn07qtFI+XeO6fx0p+s4L3q1RSPl1L+nLaJVbrETuXiKR8uo/wCnG14Ptqi99afnIpHy6pOmn90V+VCaPl1adOvReNv5eCilo7dV/wBPqn/dr6hS3kKV2JE+jT5BSPl1bNjb4CkxoV/YbfAUt5Auxp4CjyFi9sKKns/kFKToQ7nTlt3bbRfkFKfLrD+lMZ3bZb8iEUfLo1zo7FX/ALunoFK/LqP+jbX0ZIKT8utXOjfBa+lBR8ujr0a6vsNX5BSPl0fK6Qixf1fqFInQ1TeNgW1XyqhFOXZqpgE21y3KUJYdDP7T0++7TykU6Neq204nSKq1KtJp1Y6FWT0jRi+X8goy0NY3fp51qvlIpzbNVNQzsV1pypQhx5Y0xznKihm81OYRZqcwWanMFmpzBZqcwWanMFmpzBZqcwWjzCCYCYCYCYCYCYCYCYCYCYCYCYCYCYCYEzaduytzzrWHjJW5cXi7ua3vcvoJiLRM07RtG3YfT+3WsXGYjshyVSqcVVe17zaIZTLMbLs+Tn5Cqqqrl81267sSpNujtu2y3ZVH2y2ezbubX+ptXbb0VauSFF/pKijhT1tOnZpz6NeWM+PD9/8AK2RRWvdZe9ZURbjvDh2JQiOL14wrjPGXLepupX391vWWOk6a8U4qvdwN4hlz4ynbDiNVqXctiK5e5y0T/KMoqOMpxyiZrGLbTjPsW2IltrWehFMbx8XTWf5VzIsretK1iolU40/IpbGvZKmd+2ETYNyeuXc2nNSL1RWpX6TXd6KXyx4WpjlxpBd1rmYd67hXMG7LHe60rkbVFitK/KVartrrN7mKi4l5Ed2+UqKb3W78dbeMuOjse5xel1qyTmgyiecInDHKOnL8Mpa46ZmK3ItWnoxzZLVq0ROTvAh8733ps67yw44/uYDccBUqqJxFvJQ8bJYjXYWWiOsPq1qu4o2vcvJQi3L+uOln7JnLdstX3C85dP8AQd2wX+QxyimuOVtYmVWVyAqatVCy4jVA2npvoPcd1Vt6+i4+KvFFVPO5OSF4xVmXQMHb+nNgYluxaS5kfSRvmeq/pOU0iFZS27hn5i6dhq20XstWUq75VJIxmZqGTwekMrI82Q9thF4+bzv/ACcE9Yt6Gr0rZlxn4Wdxei9mYn63UvO/SdFPU2gt34eka45zMm4bbsOIzTs4Fq7f7kclUTm5VqIc/d4aNXDHG8vt4NavbYiucsESq1o1KInoQW8ikS7tdOxBaOlEWxk47pWnOavJaFkUOz23WrZz7LbrHcHOolflTsUqNa334eYWZadl7K9GP7Vs/Rr4U7WlJwXjJz7NwsvCvusZNt1q63ta7+QzmF0dVUgeVUKvFcB4rwL2M6txAnFvfStpHXGEw79EO1dK4lpdOScP8heHtaMWfydu98ercp6uxUpDFYqtY6nfcVOLv5vs+KKJi22Wrqn4vw+H812/kbdteHK6+1iYtpKJWjGJ4IiFM88cIuZqF/hwjwhq974j4l/MZhbRiXM7IuLFjnKlpnNaqiuo3tXgefPqcZZdOvGcsvuc095EzWMW458XPi1lb/cXp7ZrtNrtrDNv46qqZd3sVjF9pbSL2fX9FDv6pri8fv8Av52fBjy/f/Rsnwx2rYuhXtv71afc6hy7ae8Pa1Htwrb6K2x21mqcbip6Dj29/r159M/6OnssMNH4vxT7nacDccPPx25OHebfsu7HsWvHwU7dezHOLxm4ezjnGUXCUaLPnb4ybHh7Z1dqYrUt29wspk3LbeCJcVzmvVE/SjX0nFuxrJ8J692+OvfeP+6LdU+E28Xt06JxHZDlfexXPxnvVaqqW18lf6CodGnK8X0vo2+dvbxfOOC31v1n1LtHU2wdOdO7XiZ+dvdrMvTzcl+Nbttw0tqvG3avKstXwNXrKNr633a31Di9OdZbIzZ9x3NHrtWbi3/e8HKfabN9lt1WWXsutbV0Hs4oi0VQiYbFd3HpyxuVvbL+5Ytrcbv9VhPvW233V+rbV019QV6IQeuOo29J9M5O62MT3/cFfaxdtwEWLsjLybjbNi0i8aSe9K+CVULRFK+jOocfqvpXA311j3S9kW3Jm4zlqtjJsuW1kWXKqNrpXWObXkETFpbNz6cdmWMNm44i5mVbS9i4yXra3Lttex9tkpObzQI6GRcxti0+4iSVjVciehKhMYsH8POqbvVnR23dQ38VuHdzm3HLjsetxrNO6+3wcrWVrCvYFlnoLq93VnTVzd8nGZhLazMzFViPm1ExMh9mclRnajKhExbL7ZuGx7tadf2vOx8+yxysfdxbrLzWuT6KuYrkRQr0PMHeensvOu4GHuOLk52PVb+JavW33WUWizttcrm/KgTGMNSZ8T7eBh9dbnvyWmbf0ruD8bFbZSNy7bZh2chGfrHxddc645EpT0BZe374hLaXo69sb8bJxOot1t4OY6qXdO0/Fu33I11p8W3Grbb4+gDZsfcNm3i1eftmdYzmWnLbvrjXWXUY9O1rlYrouDPPC2B3na8d6OnbnXislVeKFZeZv1tQzcHFtu8thiUWqeXs9BDyNsITWsa7ysa3jVKNQqxZLAY5XJTh6CzbVDbdrw6olSYetp1tis7fRqKtEJp6GOlIZiMTtJaRrRLGfYvZdzFdb03sqjFXtdTtPn+y9fw3d1n284zhnjyv/dXP+ceMcXRn29YxKUuK1fA+gc/liYjUUHQiX9xx8fKbj3batYqcLq9lVPne9/yHX23cxp2Y5RjMfj9n9Y8Z9ng6cO36sbhcv5m32Va27cirmo5KIqoqL2LVEU7O79c7XtpjHZnU5R1Rwym4n23ETCmPbzlyha+1No/8b/su/wBU5P8A8q9P/wDc/wDDn/8ACt8pl4H2ls//AIy/5rv9Uf8A5V6f/wC5/wCHP/4T5TLwXca7g5UksPmreLuCp2+lEO/sfVu27uZjTl1dPPhlH74hnn2848y43BtrG5ctsXto5Wov5VNt3qHb6sunZswwnwnKIn3yrGmZ5Qt620Jw1WcDin1/sY/+rgv8rl4KVztmb5dbs8EcqfkQwz/yf0/GanZ7sv4YrR2mXgpXeNrbWKvdTuRF4+uhzZ/5h2MXU5T9WP8AOl47PJMsLbv2WXrVUY9Kojv/AEU97su7w7nVjtw/Dl482Gerpmlb0tWmOuPRIsRXKtO5DXfux1YZZ5fhxi5+wxwuaWNvyrebaV6WoRWnii+heB5fovrHz2uc+icKmvGPsng026YwmlzKfaxbDrysV8foodfqPe/LaMtvTOXT7I/bkrr1dU0t4r8fNspcYiNXsc3wUy9K9T197pjZhz9seE/tyk26emaXPcGVPUZeWjq/a/ePdluLrVjGi9vppQ8n9a7Tz/I6/wDq3VVlz+uq97X5aauuC6u3sr2HrMfLW71nCxmI++sGqtEVEVePyIpw976hp7bCM92XTjy9s/utfHR1clVrDxb7G3LS1tu7FVPnobdt3OvfrjZrm8cuU8f4oz01NI7ruyW1oqLdXvVE/wDUePu/yTs8Jq5y+qP9GsdrM+xStrZsz9WxVtPX2ap3r6aobdr6/wBrvyjGMpxynx4X9v8AVGfazENK6q2F2Pccx7e3i1ydioexLyd+qmn2dmlf9nvIcka+Ld+ntgaqN8vFQ7tOptvuW2YjUTIuo1y/RTivqRFU4e99V7btf7ucYz4c5+6Ll6GvtpnlAmLtWW1W491Ff3tclFX1oilez9Y7XuZ6dWcTPhyn7pqU7O2mOcNW6i2FqNeitoqHoy8/dqck6l23Se7gVl5O7CmlZKRepDhyR5hBMBMBMBMBMBMBMCxMlUmAmAmAmAmAmAmAmAmAmAmAmAmAmAmB1roPYre0bUu4ZTK5eQiLFe2i+wz+VTTGKZ5ZNu2fb8ncMxE7b11aucvY1E7/AENLr6dOWzKMcebdnOs7fjphYSedqVu3O+q9681H0vfj4P8Ao6fxe2fD+rHb7dfitsttJ2tVXKvaqr3qV5vR1aY141DJ2rjvsTWdwc5iJXlQ01RxW2zWLidhJ79fVYuuWlk5qLJURVrJaG+7ONcf8Tl7bXlvn/gj2s6zf85izs7TkX2J9NXNaqonejF4nm5Xlxl7eGMYRURwbTtG8Jm4yXNC7ZuN9uzcaqOShC8wsM6h3hchW5VvD2zEr+rfl3f1rkrwWKKlC+MSplTJ7hg3Lt3CzEbW7ae3UvWPMjWdqvXvidWvdUTGTz93bXlE4c2C3zens3zMRj001uVtqne1USinRpw6sImOSuy8cpxnhMKcfe7qp7SepC065j2IjJtGHsG3bzteLmXWUykupW83gqsRfMz0OQ5M8piahpEXDb7Nm3Zsss22xtsRGtb3Iidxk1pqG5bdP3q5bStqzfdbVE+jwRU+TiTb5n1LsOj48fw/uahueHRVVELQ8dDv42PvO1Xtty0k5G0a7vinYqc2qRMES4tueDkbdn3sO+lLllytVfFO5U9KGE8G0SttULL1hqufFEqq8ERAmHTOjeg2Na3cN0aiK3zMtO9lqeLuZpjiTLYt23dWp7nhfqrdKPudjlTwT6poRiq2rYH3KPyFW1bXjFPbd6/ZImXo9t6blnxy4Y+9strOwNttpbtMRip9FqVc5eaiOL1I8rRFRz97xN9ylfRjEtsXiivXj6kJqEedty/Dj0/WymFnXb6Kx2Qq3KVa1qUTh2+ovjTn347Ii5z4/Qru2FoqrxVeKqpbpcE6mOexKqOlWdK09iFZxUnSi3sdjqlZhnOpjMvBatSFZwQEs38Z+pacrVTwLKTitbrtO29QYq2chiW8tqLB6dtfFq/yFJizk5VveyZm05bsfIbw7bdxPZcnihlMUtzY1UKolbcoVW3O4gScKq3EC2Lo3SFpVezgTD0e3h2rp62qW2l4e1qhkOouosPYsD3i/wCe6/y2LCLRz3eHJE71Obuu5x043PP2Q03bo1xcue2to6s6xyEzslUtYn/cvuVbaa1e60zirv53f4nixo391PVPDH3fY8+NezdNzyaL8Tt+x+mreV0rs+Vr7jktRu857Uhp2VSqYtvi6iu7bi17KJ6PT7Xs403xvKfa4u92xqvXjN5Tzn+DG/C7pa7bxL3WeTjOu2MG5o7S1WK5i5XfkP7oWe7xf6C/d7p165yiOP7cWfZaJiPNmPq+vx+xsL3vuPdcuOV9x6q573LVVcq1VVXxVT5eZvm2ZfpbqK/sm5MvSVcK6qNy7XcrF+mieLTq7Pup053/ALfa20bpwyv2OyZe4YeJh3M3JustYlpuo+85URqNpWtT6vqirevs2Y4YzllPB8z9edUr1J1Jkbg1FbjNRLOGxe1LTK0Vf5yqrvlODPLqm3556n3nzG6co5co+p2v4Q7Rd27onEdeSNzMc/KVq/VuL5PWxEU69MVi+w9E0Tr7eL/3cWL61ysXG+M3QV3JvW7Fr3LekndcjG1hj8KuVENXronWu7bb1h1t0n0509lMzsnY92t73vOViuS5aw8fGtXWtZduNVWtfffcRrWdqpVewDRPiTumLvXQ3V+/42LsOz4NnMyLTL15jrm838zBvpabcR7FtaF1z7f6tPMqNovYBt/V25dU751501tmxbdZ3Z/TWI3fd2sZWR7taTKyrbsfCrcRl5ZsTVuI2PPwAp6Fy9/2fqHrPprqDAs7Xc3i1d6j2rFx77sqzS83RzmsuuZa466NuRjw1ANYb050/gf4cOm98w9vsWd5x27TnWdxRqLkNyPebVXpdXzdlW0rSPDsA+hMha4d1V7Vtu/0QOKfCD4e7hunw72fcLXWG+bfbvpfc3CxL2O2xbpk3EjbR1l7qcO9VA1e0u54/wAENtxLN+3c2691dfxt8yNwc5Md+Ku4Xk/tj7SIqWrt5LbblOC1ovlVQhuu1bdu3TfUWf1fuP2DYw8LYsp2btXTi3kvZVuwrLtq4609Ea7SRr2td+nQJaxevOx90+GW62cfp7aGZ262PcNs2ZquzExcnHuNuJcyUViPto17UuIluiujxCGR6kwsbK6I+NiX8dmStjcMm/ZR7EfC4za8elxtUWLmpXzdwSm9ZbF0xf2b4Ybfh4uMm05m+Yj8mxiI1lq65cC850tKiOlFEd4pwXgBsG27Vtez/Hl2NtOJa2/HzemHXsuxjMS1bu3LGdbt2nuY1EbJjHuai+CgbduzUi4rLz98NI3NKOUrLxNzD/SIcjMbY2rkJh16W77SxItLw9vRCvd7bLu7Y1t3sva1rqeCuU/P/wDJO3x3ep6deX4cscYn/vZPc0TWuZWYbR/9rk+r/KcHlemf+z3P3f8AzNL2eOKPb9xXKe1ce4tpE8rW11PlStDzNXyc9zljlq2eX7Ii+v7fipaerp58fcvtbsyvZbWxfar1RrZUTtWnienjq9KnPHCdW/GcpqL4f+pW9lXeLOYuJZxra2rSKjVWS1WvFeH8h9/6f6dq7TX5er8N3x4/tycWec5Tcod2/t2e9+G5aXEVUaqpRap2xPG7nuux9Ryy7XKfjxnhM8OP/D/GPa1xxz1/Eg5OJatbpiY3F9uDUVHLWtXOqfPd96Zq0+odv2/4sOnHn7fiz/am+GyZwyyW8/J2xbb7VjHhdrGSoiIiIvGlFU5PWO/9PnXlr0aenZdXMRwrnXxStqwzu5ng8xMvZ7VlrL1h9y72ueqN7eXmHYd/6Vq0xjt1ZZ5+2ax5/R8XJGeGyZ4TwZrb24i2Ev49rTbd7qUXgqpx4qfe+ja+1nVG7t8OjHP7+E1x5uTbOV1lPJRuGHt9x2tlOhRIylHgnH+U5vWfS+y2z53cT01FXdf6806tmccMWGuWsPIdpYNhERPav3HKn5FU+H39v23c5eV2evlz2Z5ZR7pmvdf0OuJyx45T9idYwtqxbbveb1u6/tVFVOHoROJ73Z+l+ndnrn5jZr2Z855cP+WI+L9uUMstmzKfhiYUY+XYvZjWYuGxbbfberURyJ9apn2XqWnuO6xw7btsJ1xzy6ceqI8b9n23OX1meuccbyy4s41rWpRqIiJ3Ife44RjFRHBxsTveQ64rMCzxuXVSaeCdx8d/lPe5bJx7LV+PZPH6vZH8Z+iPpdXb4V8U8oW7jrX6rbcW+61dYvF7a0ctFqiq1anN3GWuOj0/ttuWvZhPHKLrKa4xPTxv2z7I8eCYieOeUXCHlszbV9uMmU++93BWI53f3LVTwvUdfeat0dtG/PbnnwnGMsvb7JufbHP6GuvpmOqqXV269iwYuclh11URGtVyVX5Dtn0Tb2U44T3XlTsnlE5Rc/Z++UebGXHptksDBzMe6rr2Q681W0Rqq5aLVOPFT6n0j0ruu32Tlu3Ttxqqmcp4+PFzbdmOUcIpjt/tOs5lrKZwV9OP6TP8h8z/AJf206O6w7jD/d/5sf6V9zo7bK8ZxZ2xebdssuN9l6I5PlP0HtO4x3asdmPLKIn73FlFTTB77dW/nWsRi1VtEp+k/wDyH5//AJbvy7ju8O2w9lf97L+lfe7e2jpxnKWdsWm2rbbbfZYiNT5D9B7bRjp1468eWMV9ziym5tRZwcSy1GstN9KpVV+VTn7b0vttONYYY/bFz98rZbMp9rD9RW8awtp1tEZcfWTW8KonfQ+S/wAq7TTrnDLCIxzm7iPDxdfa3ldrHUVlb214a3P66HGvbxRO0+w9PnOe319f4umL+55neYxfBrOHtn66qodThxw4ty2qyzGx7l1ycLbVX1JUy7ndGrXlsnljjM/dxd2nG5pG2vETPyLmRkedqLVU7lcvzH5x/j/p8epdxs39x8WMTy8Zn+ER7Pqepuz6IiIN3w24d21fx/1dV7E7nJx4D/JfTMex24b9HwRM/dlHHh9fgaM+uJiV/dmNycK3fp7bEVfVU/ROz7iN2nDZ+bGJ++HmdxhUzDj3WeKiK/5Tol4ncYuVbmkbikPKzY6YZkwEwEwEwEwEwEwLciqCQCQCQCQCQCQCQCQCQCQCQCQCQCQGe6K2j7V3y0x7ZWLH6274LRfKnyuLYRcq5Twdff8Arcltlv8AVWPL6XfSU3ZN62fG+zdta5G/23LpFF+i3ur6O0Vb2+3jyNVx/c2cvoj9uK7kW/d1S2iycvF7l73L2qUyl6/bdtGrGv8AdPOUDqJ6q+03vhwIt1ZSvZOY/cOn9w27brjfeMSw20/ncVqPc3l5S2d9PD8TTt5w646/w3xcs6Zx8G0/eLVtjLF7VtXLl+izc1zaQr9VrjCNkzHF3bNMYZcI4KL/AErk5m6NynZV+5aY9r2xfFPL9H+apMbFMtVt92jKybd6zjvuPci2ooi8eLf8gnJHRCxmdLYF3fG7nebq32sgqqq+w/tRU7CZykiIbHqWMfbbqoiW7dtiNb3I1vZ+YibnhHMiom55Q571bk47t3t3cVEdjXce062reyiIqdvetT1u2ynXhGMex5O7Lzc5zn2sdayVpwaqKa5bZmFIxp13oJ6v6ZxnL9d/+kedt/E69fJs1TJoxG1Nbcyd3tPSTVyaKi+C22hScYyiYnk1fqDa/d7z2LxavmY7xavYS+N7ztp07Jx9ns+pp2RqYmU28ztataePL5Szkaj8Utnt3LNjecdvCiMuqn1Heyq/zXcDPOF8JaDbUzbOi/DzpNq03bPbRqJKy13cn115+BrhiTLf8i8tyy59Fbj20/V207XL3V5qXa4Y3NMSli/hP98urbddXjpvRViq+H6RR6uPaZaqznp+qWYw35t6025darLbkqqs7V9ZFu6ctuURcVj9BnZGNbsrpUaqdq9q1Ii2+GOvGPh/q1/I3pW3Gce2qGsM8smc6Y3Oe7WUV3CqVRfB6U/OIypXPXOTfci3Rim0S5p1sG+iuX0i0eWtORCbVnUs3EShFM51Id2lTPLFjlqHYrX2q0Dny1sTl4b2Ok2qKi1RUDKcULc9uxd9wX4uSiJktSrHp21T6SfylJhnycn3PbcjAy7mLkNpctr29yp3KnpMZilmOuEM0dy+YhDK7RYV9xvAlrrh1ro3bvYWngWh63b4Ot7W2ziYb8m+5GWbTFe969iI1KqvyITllGMXPKHrYRUXLVNm2271fvV3fNxav2VYdp4mM7sejV4IvJO13ivDuPF0ap7rZOzP8Hsj9ve5deHnZdeX4WW+JnWtno7pW9nW0audd/s+22F7FvOTgqp9VjUkvooe1PCG3edxGnXft9j5X2TaNz6o6kxtutPddz90vrqX3+ZauVX3br/GLauUzfLateW3OI9svsbZ9i2/aNmxtnxLSJhYtpLDLbkRZNRKKrvFXdrvE1qKp9hr1xhjGMcnJ+p+nn4HUV7BwrT7lu4iXsa0xFc5GPrwoleCORUPle77bo2zjjH0w8nfp6c6hjsu3s+0Irt+y0t3k4pteKrbuU7k9U8ln+lx5G2r0+eec19Ht/o49/c6tP454+Ec/wCjWuqOuN135lnDVVxdpxUazFwGOVyIjEo1bj143HU8fkQ9S+ER/th4Pfep7O44csI5QyPw16ByOptybkZLFZs2K9FyLnZquTjosXn9LwTmX16+qfobekemT3GfVl/bjn9P0PoxltjGNYxEaxqIjWpwRETsRDufexFNS+In4fWcXb8rrTbcXOw35TMLHycvFZlWse5k8GuuOe1yWrbnNa1XrwrGoS2HbNn2XZcH3basHH2/DZVyY+JaZZtp3qqNto1oGrdLbX8OOsNvXq/F6fw3XN5bdtZN/IxbOvdbbuOs3EurR0pLb7+1KAbZjbTtmJk5OVi4lmxk5kPe79u21r7uk2NvUciVdBvBtewC3k4OyZGbazcizj3czGbctWci41jrltl5ES6xrl4oj4pJO8DXNh3rore/tXpJm3Wsa10/et417Z8mzabZ0ko/HvWbaStutOj5FTsVOxANvbcs3EVrXNelOKIqLwAxebkbJ0n01l5jcdmHtO0497Kfj4zGsa23ba669GMbFtV4+lQMbtO5/D/N2e5t2Mu3W8PIsvyM7aHaCRbfTVv+8WEVURfOupJO2tQMV0VnfCXD3PeNu6Zx9t23Ixb9vDy3Y7ce17wr7LLzIOYsrjGpdjyWqAZ/bugOiNsuT2/YNvxXpebktdaxrTFS8ysbjVRvBzZupTsqviBGyuqPhrtGbn4mVuu04GZk3FfuePcv49q5cuOY1iuvtVUcrlYjU83dQDVtj63+A2LuV/p3b72y7fb2e5b3HEei4lvEdevtc1b2K9HQW4xtWvpRUrTsA3LaN96I3zdn5Wz5+27nu+PYW069i3bN7IZjvejlarmK56W1e1OVQKt0RytdRFUrLz97S9yxslzljbVSsvE3sSmBnK6qWloHH7Wa2vBzEc2rKCHbobptlm41qVQvD29CFvt24m+Ylq09LdxzWwevFEWTuPE+C/yPDPL1HT0T05dMVPh8WXF9F2mETpymeS775l/fmL67R0ed3X/93T/+2r5eP/t5e9jLGbd+1ryJn2rdyi1y3Qg7s4JXgfP9tO6O/wA8o34Y51P/AFPh6cuX/Z/0dOemPLj4cvq9qrcMq+7KxGLn2sp7n0Y61BUYqq3tia+qefnu09W/Ddl1cJx6fhm8edfx8EadUdOU9OWP1+1s+DZzbdtyZV5Lz1WrVRqNolOzgiH6B6fp7jDGY35xsyvhMRGPD7Hl7csJn4YpE3bbsbIfbc263HynLS25VRJU7qd9DyPW/Q9Pc5Y5RlGvdM8J/N/OY9k82vb7ssb4XCDm3FtdRbfYc5XqltiOcvaqydxWh5XqGqcfVe3iZnKYxxi55z8WTp04XozyQcB25ZGVmNwVZVj/ANZNGr2udSkkU8f0/te72btvy/T+LjcYz7Zr8US23Y68ccetfz7O/wBnEu3MhbWg1KvijEWleTUOv1DsfU8dGU7Zw6K41GH8MYlnpnTllEY31Mz06+ez47vFHf6Sn1v+NRXYa/t/82Ti7zGtswr3PbLObB1y4tvTrxSnYvjUes+iau96ZzynHo9seCNO6cOUNczXbLYelrFfey76rRGMVqtr4VRtfUfD992Hp2rLo0zt3bPCJx6fvjHj/wBn74elqw25ReUY44pW39P5d1NXL/Us7UtIvnXkq8aHX6b/AIhs2fHv+DH8sc/6e+WW7u8Y4Y8fpSNo3uw3Idt+RZbiXmuVGN7lXwVV7+feez6H6rrwznts9caconhEfun/AIvp9rPuO0y6evGeqGwn2Lz2r9SWMPGV+Tcuu17y/q7KU4qiIiqfnv8AlHpfb4ZZb8sp8zPlj7r+r/R6fZTln8MRwj2mLZytv2p2elqWU6iNYqVVjFWlaIPT/TtvYdrl3OOHVvy5R+XGfbXj/D7TOcdmzov4UDD3PcsfNW2mNPNvcaXmu1PFaIqt8Dx/T+57vtu4mtcZb8/zxl1ePjjzdWzt9eWF9Xwx4cleVuW57jeXEdiNXIs1VyMRUe1OCL2uXxNvUO57z1DLyctWPmYflieqPvynhyUw7fXqjq6vhlmOm91uZdl9i4jtXHoiuVF4p2UXmfVf4x6js3ap1bI+LXwvxj6fphx9728YTExylJ3+xq7Zdc1KvtfrG/0e38lTr/yXsvmOzyr8WHxR9nP3Wy7TKtkfTwQumN0t3duupcWnuqq5y+DFRXV/Oed/iffR8plhlP8Aauf+zPH+bfvu3nHOK/3IfT1124btey1Ty26v9Dn1RE9VTx/8d0z3ff59zn/tvL7cuER9kX9zbvMPK1xi2w/SHksTn4O93cm4/Gy22rLqQtqqpTyoi9iL3nzvf9h32zbllq29OE8o4+H1eLr1bdUYxGWNywmRbzdrymZO42Uy2KtEuK9VSqc1/lQ+Z3dtu7LdG3ucPOi+fVM8f2/NDuwnHbj04T0s3kaO44lrLsqrrb0oiL3eKes+/wC07rDfrjZh+HJ4vcaZxyqfYiY+2o11aHQwjBNz00dnylThS2v5jy/XP/4e3/kl29pjezGPpRekLyXcG87vS7Rf81Dwv8KxiO2z/wCf/wBMOv1HDpziPoe9W3Utbdad43kT/suL/wCaY32uP/6kf+XJHp2HVnMfQ8a+ewYzvFh6/oUV2Wr/AJXH30VnMfS5X1sqec9WXgdy4/vDv1rirx9jFSIZEgEgEgEgEgEgEgLdQgqAqAqAqAqAqAqAqAqAqAqAqAqAqB1T4YbemLs17cXt895Veir9Vnlan+cbYRwZ5Txbts1hJse9s+KOci9/GtF9Je0Y826Ybb+ZfW9eWumlaIlETjwRCLex2MZdxu6s/Z+0Qp3fLtWrrluKtW0oiFafR5MF1XuGm+0xU4Ot1R3eVmJRk0bed13Tp3qVHpkrjbJviWL2Xe4qlWJF6J4Lw4nRhFxftZz4JPv2yZ3UGXc2q81yXraOuW2oqdnenihzbdM4zcfhelp7qM8YifxR+5ldtyotXUVFY3tVeRhbrmIlRgbllM3lt5Hs06uij3UVEXsa3wQWRruOEMxm7olm9jL77a94vqqJjtVE1KcVi3j7JaZVjX4wp623HIZ0o+xYamvn3bWK1F7Ua5ZPclPqtbU20ReTj7maxaJu+3bbmX23WbzdarGNtpbYlGNinGnDvcd3l5ODHOIhGsbDhV828XV9FPmHlSnzIdG6K6NzL20W72N1HnWrD3uVLVpWo1FThXiinPs4S0xi4brtnTd7Dcj8ndczNc10k1rlG+hWtREUpa3Sr2S4jt03lESkclif7FpCYXd92xc3HSFEuMXgruyi9qFoed6j2U7sY6fxQ5v1FtWTivjeZFV4scnFq+hSXy+/RnqmsoYO9is3LYsvb7nFUarU5I/sX+i4iYYxLnHR/Td3c94W1eaujiu/Xp4qi0j6zLGOLeZdYtMS9cbjWVjj2eCqnY5yfyIbwnGGW3eym1YVpLrldk5FNO0valeDflKy93tNMacfMy/FPKFedta27dtrnUvtRFRKIqSpxqilJehrw/37PxeCNmZuVZxWsVqJdX2mt7CkxTeM5yYi5705jkvWLcXdi21WSL8vaRlnS2Gq2m7tlutX3trSDu/uqWxzMtVJeydQLZvWL1eNt0Hc0XinqK5y014Oz2veMvbbObbzFdbvMR6JRPlQ69ecZRbi2apxymGKq5yqupXj4FrZ9Asu9/5CbROC256JwctfkHUpOuVlbtqqo5Kr3cCbhnOqUi3auPYkXUT0FZiHNnrWcnBerFWVfkKOXLCWu5dm7YupcY6jmrVFItz5YsJ1psSbttabjjJTJsIquaicVRPab8xTKGbld1rk7VMkSir/AFiEKtp6bx5XW8Czq0w7b0fhIlti0Jh7fb4tg66u3/srC2XFWmTul5tlP5iKiury7PkPP9SynpjXHPOadHczPTGMc8mzbbgY+34NnCsJSzYYjG86dqr6VO7VrjDGMY5Q6sMIxiIh8xfHbqt299b3sK0+uBsyLiWmp2Le7b7/AEy8n9EZTxfM+qb+vZUcsf2lkvgpe2jp3E3HrPd2vdabcbteA222T1uvbrXqIqp2NRvH0leqMeMnZ78O3xndnyvpj97dt1+P1lEVu07W5y913Lejaf0Lcq/5xSe48IV3f5LH/wBPD7/6fzaJvnxK6w3hXNvZy49pyUW1ipopTwVzf1ip/SMctmUvF7j1juNvPKvq4NWRKrROKqvZ3qqmTzObpfQ/wd3Lc3W87fWvwtv4ObjezkXU8FT/ALtvp83o7To16ZnnyfR+n+g57Ky2/Dj4e2f5O34GBibfi28TDtNsY1lsbVliUa1EOuIiOEPsNevHDGMcYqISiWjQvi91TtGw9L5Td96ezt86eyrF1m6Ow22XW7NpaN/W6l2y9JT8qtrSncBG3Xpjri3ia2wdZN2PpzGwraY23X9vtZbrNqzZRFnkXbi3HcEqqu4gaX8HumPiXnfDbZcvZ+u7ODg5Fq5etYjdsxsnSW7de9zXXFfVXSdVU7l4AdwxtXF2+379fS9dsWk95yYoxHuY3zvglaVpWiAfN9+//hx23Z933beM/H6k3m5kZmdabadl27l9b9112xjNSUaoioyvBO8CvpOx/ht/6cwb/VF/bG7/AHLLX7l7uuZZtse6qpborl/qmuhVe2lQNz+FbPhRi9e7hd6I3vHu2Ny2+zbbs1nXeqPx7j33L87qqlHNuMSnICZ8fepUsbXtPStmy7Jvb/n4bNxttRVbb21uXabffdVPZbcc9lrnJfADXVvbLnfEDqXKbifYO92rWVg7Di39jvX0y8THVtzc8uCJaZlXMlfIxJ1RiItFmqAc7v4eflZfUOPtzf7Y7f8AaltK3pi7Yg5rcZyPV1aYzW0k62vte1Wjwh9a4FvNtYVm3m3m5OW1iJfv22aTHvROLm25Pii+ElCXBkycdOpOt8axiXre4J1E64/cmbC/erbrK4VhEsSbRGOa/wA3tfJxAwW25W6O663qwt29pswsJzf7oOfxc67X+zI6Vrs9v6f9EIdK+CPU9veMfcbGRtbsfdcPKzMe5uTNrXbrN2xj30Zba5aRbdoqK60rqpx8AOgZyrFSsvP3tbzZSUh4e9BajpEOSObKYDFVU4CHodvDZMNvBC8Pc0Q1zcnOyuucayyi6DGo5F7Eo11zj/nHxfex53q+GMf7I/hOX8X1GiIw7LLKfbP9EaxaTbtwTF3rb7DrF1y6eY2jWInpVU4J6zl1dvj227y+61YdOU8M44RH8P8A1fW1zy83X1ac8uqP9vt/b3MXcztvsb9eu2sduTtrXUViItIcEk3+keTnt7fX3eWWOEZ6b5fR4x9rsx07MtERM9Oz+KZffa3LMspsG3K3QcjlyFq1tUVF8yVp3eNTv2Y4d1tx+S010TfVyj7fZ77c+GM6cJ8/Pn7G/WtXTbqIiXKJNGqqpWnGlacD9Dwuo6ub5uavhyaj1g52Vvm27c3scqK9OVx6Iv5GHxn+Rx5/d6dH7fFNfuh7npkdGnPZ+3D/AFFue99fNY3izGbRyp+ixV/03DKI3esRXLXH7sf5yRj0djc88v5/yYx21YN7cNxsOy3LkWW3LzUts8iq2rnNVy+HYeVl6Voz37cZ2fHjGWXCOHjMfY6o7nPHXhl0/DNRxnihYuLgO25uTk5L7N69edatojZMRGo1Vc9fBJnB2/ZaJ0RnsznHLLKYjhccOnjP3unZszjZ044xMRjf0/Z9zoWx4TsLbLGM6426rEX9Y3sVHOVyKnrP0n0ztfl+3x13GXT7Y+mbfLd1t8zZOVVaB1Rs97PtsutzExbNlrtZHqsFTgqKqIvced696Zl3OMZeZ0Y4xxvk6vT+6jXMx09WU8vFrewbTczbt73HdHWVtLR6sY5rlRexUo5Kp8p8x6R6VO7LLyd04VzqJia9ntj9vY9Xve5jXEdeu7+k2zb7+RuufhX9wvNZhTrcaq1WDo1jVSey7DLb3GzVltzjHVfGPomuRv3Y4asM8cIvP2fWuWNq2jdbF1MHOvv3JqKrWZKtSaN8EpWipz4d5fV6X2veY5eTszndHLrrjX7ePD2wrn3G3RlHXhj5c+HsbT02m7JtrE3NKX0VUbXi6KdkuZ9f6NHcxoiN/wCL2eNfT9Lx++8rzP8Ap8v25MB1Nibbe3Rb17dbeNFrWutI1116Kn6LVPmvXez7fb3E5578cOERVTlMfZD0vT9mzHVUa5y90I2y3dmZveKtvKycvJVVa17rbWsVVareMnS4HP6X8rj3eExns2bPHpqOUx7Z6mvd47p05Xjjhj9fH91JuFeXP65vXbaytYrXIjk7PK3TX/tOO7tso7j1fLPH8OuJ90dP75YbcPK7KIn8WX+qvYnqvW26N7kZc/8AMYW9Kj//AFd31Zf+bE7yP/s8Prj90spib9Yu73kbUlhWPtVcl1FRUdREqqpRKdp7Pb+q4Z91nojGpj2+Pjbh29lljpjbfCfYzLmtc1WuSqKlFRe9FPYmImKlwxNOXZt3L2jO3DCYtG3EW0tf/DVUc1flb+c/KO4jPs9u3Tjyy+H7Oce7977DVjhvwwzn2cft/wBW6dG4bsfZbd1/9Zkqt1fQvBv5OJ9x/jXZ+T2sZTzz+L7PZ7uP2vA9U29W6YjljwZnNymYmJeyXorm2Wq9yJ2qicT2u53xp15bJ4xjFuLVrnPKMY9rH4vVGw32I5uU22qpxZc8ip6/5Dz9PrvabIvriPr4OjPsN2M10/cw3VPUm35OImDhu17lxzVc9qLRKLWiV7VXkeD/AJB6xp3avJ1T1zMx+30y7uw7LPHLrz4QzXT2DexNns2chI3X1e9i90lqieo970PtM9Ha445fim5n6Lef32zHPZMxyMjednxcxuJfvozIdSjKOXt7KqiUQ33eqdvr2xqzziM59nH2/Tyj7VNfZ7c8OvHH4UvNxUycO/jdmrbcxF8FcipU6O70ebqy1/mxmPvZ6s+jOMvCWl9I7wzbcrJwdwXRk5KK/giPbVFRV7qnw3+Od9j2mzPTunpufb7Mo4Tf7ex9B6n207ccc9fH+T3q3d7e5ZOLt+3u11R3mVnFqvdwaiL30Lf5F32Pd7MNOmerj7OVzyR6Z206sctmzh/JndyRmFttnFRa6NpGqviqIiVPt+10xp1Y64/2xEfc+b7rb1ZTl4y471rmoqvSprLwe5ycn3S7K6pV5OcsdUhmVAVAVAVAVAVAVApqAqAqAqAqAqAqAqAqAqAqAqAqAqB6iOVUROKrwRAPoR20t2ra7GExKIlnHZ8rWIjv+0w6apnsipZbabVETgVVhum1WUt7Xcur23HdvJvD85OT6n0jV06py8Z/cgbvi2b9yD3I1V7F7yr1JhrfWVvGSyi3LkbjLfk5lfajJrvWtjCzundvxcyqMuMqxydrXonByGmOVSplHJybcunOr+nb1jdMRr7uMxyXbOTaqrHo1axeifmNMvihbDLpl03Zd1xd42KzuNu0rLWdacl2wq8WOWrXsryU4M8al6uvO4tb2XaMjbL1Mdjb+KqUtayJcezj2I51akW6scsJjjOUfU3vF2y3kQyMm212SiIjHKiVYla0bREoTTDZsjljyad1x1JavZdzbLLXN91VbT7qpTzLScfzeg9LttdRfi8fudnVlTTHWXvetLnBfSerhnriOMOKYm123i3mqizrTuIzzwmOEJiJdy+FznL0xZRe51z/AEjyN/4nZq5NxRxi1YXYV/8A5vf08Mi0vrsNCIZ1Uq2i9ihLXt7wLebiXca4nm4wd9V6dimkQ8bvtcZ4zj7XLsJHWtyfYclFuI5jm/pJx/OhD5de+xWbEmRBtMjNfq1763Eqv+aTONNZiYniz/SG223X9e8n6jHSblXsV3cgh6HY6oyy6svw48ZQutcpy7m3Mfxc2Oizuala1XmpWY4vVw29Xxzz9keCbl5Cv3FJ3Goqoj2o9fbVUrRDP2u7CLi55sVnZ1y5dclGq5a+ZHJ2+gyzmZd2vXUKWZVt9pNTyuZ7Tf5TLLJ04YND+IduzYamXa8q36Mp4qneTqyuUbseDUNv3J+tpotZ8ac2mubDDnT6I+HuTcv9B2VuKv6t91ja/VRamva/hZd3Hx/Yi2c7Ga5yT71N4lypTb1p/Y5CSlu5TtVURE4qq9hCKYjM6k2XEuRe5b12tKN4NT0r4EdSZ1+LK7d1V01kMRi5TUu8KIytE9faaxH0uTZH0Mmjse81Us3EuU405FMocmzBhdyw0VFWhVw5wxeGqWr7sd/9Ve8vHsr3EObJyfrTaF2zeb1traWbv6y16F7U+RTDKKlES1pON5Cqvtbv0nardZ6ULO7RDunSdlIW08aFoe7ohkb9v3v4g4zXcbe24LrzU7kuXnqz/RPPyjq7qP8Agxv72kxe6PohsWbkJjYl/IXilm2+4qfzWqp6LpymomXw7fybuVkXcq8sruQ91245e9z3K5V9amL4fKbm5dIvN0vhZ0q23wZkZO43r9O+6y6ltteaMMt3KD1OZjt9Uez4v4MFYsX8i62zYtvvXnezbttV7l9CJVTB4eOE5TUQ3jp34N9V7qrbmYxu1YruM7/muqn6Npq1/wA5UNcdOU/Q9rtPQd+zjl8GP08/uda6V+GnTPTsbtiz71nN/wDrMij3ov6Ceyz5EOjDVGL6js/StOjjEXl4y2t72MarnuRrU4q5VoifKpq9Np97r+3uGbc2zpLG+2sy0sMnMR0Nvx14f1uRRZO4+xbRy+grfg5J7nqnp1x1T7o+1mtn2a/iOdl7hluz9zutjdyFSFtja107FpFVttlfS5eEnLRCYba9cxxmblpn+IrcMLF+EHUNjIvMtXs6wmPh23L5rt5z0cltjU4q5UapLVA6myeoeumY/RPTtm5j9L5GPYXqDq1FboXsO5ba5cbbnIq6z7zPI65SLEr3gSd36K3fofP/AOpPh3gtuYVxbbd96PtK23ZyrbURnvGIi0ZayWN7exLiJx40A6cxyuttcrVYqoiqxaVSvctKgc7+LvTmbmps++4u87ftzemr7twTA3hEbt2RdRittvv3EVrra2qqrH8UavGKgcz3j4y2uucHb9g3vCudK9K7lffY6g6luJcfgZVqw5K4uFltYxqNyVSi3Xxi2veB9FYD8B+JZuYC2n4isalh9lWqzTp5Yq3hSgGl/GS3aZ0rayEttW67c9ptPfRJOt/aVh0JdtJIBzpu77jl/Erc+lM3Jt524dN4+4Wdnc7cX4WRmt3e/ZyIMyWo51q7g4vkdTzLwXggFjpLpbqtvUvVFxNiz1Rm5Y6rXqfNtIiph2XeZ9P7Vw+k7+Z2NCH0O1yK1HcOKV4LVPWEvnO/vey5PT+5blez8J9/d+p87csHZ7l7LZfzsC2vuKOxkwXa8nNsTa6D214cK1QMPfw8DH626j3fA6O3fN6cwNrwn5W3XsvOxd0WTr628qwxb2pcs+SL2vVHInFG9qKQ7D8E8fGs9H3bmHl7dkYeblXs3Hs7Zfu5Vuwl50n235F5VuXbk6yVWtovCnAE8my7rfuNa6i0Ky87uJaVuWblo5aXFQrLw97HWs7M1P61SHNjzbFtGTfVySuKpMPS7due3vVbar7SolUalKr6y0zUPd7eIlq207RvGdlZ+4LcdgZb7kGOVvFKrV6JXwREQ+I7D0/ut+zbvmZ1bJmo/j90cIl9R3Hc6deOGuuvGI/0Xs3Ztq2y5aubkzL3a/dqs0STUVtO1JIvf3qpt3Pp3b9tljlvjb3GeXt5xw+2/b7Zlnq7rbuiY1zhriFrpvB9533Myvc1s7c+25jbVxkUo5WojadnYlVMvRu183u9mzy+nTOMxUxUezgv3+3o0Y49V537ErJ6Z3Lbb7szYbyoi+1iPXgqeCV4L8vHmdO/0bf2uc7ezy+vCf68J+3jHiy19/r3Y9G+PtbBtV/cL2Ex+fYbYyFrJjVrw8ePZ6D6Lsdm7PVGW7GMM/CP24fVxeX3GGvHOYwm8WsZFrcn9XZWY3Fe9cW052M1UVGviyCUVe3zOrwPlt2vfPqOe2MJnoxmcfpqOmPr4y9jDLXHa44dUR1Tx+j2qNj2XeXbdmZ9tUtbjmcGOuVR0VWr17OCuXsKel+ndzOjZuxnp3bOEXzr2/VMzyT3ndafMxwnjhj4e77lNxt3p/GuYLMJ2Vk5dhVvZbVVURXSbGiNX2fSUyjL0/XOmNfmZ7MOOUfTcVy9n18VsZjusoznLpxwy4R+0pmw7B710w/EzLekt6467aVyUc1YojXUX0eo7vSvSfN7Cde2OmcsuqPGPCf29jn7zvejuYywm6ipZDpSxvGLhXMXPaiMsvjYVVqqt7/6P1T0PQdPcatU690cMZrH6v5eDm9Sz1Z5xlr9vP8Abx8WOztr6i3rcX2MxUxdtsuqiMWSPTuVPFfT2Hnd32Ped9unDb/09OPhxv8AnP18vB1ae50dvr6sPi2T7l7K3NOn7jcDB2t16yjEfqNcqSVap5qMdVeBv3Hfx6dMadWmcsau4nn/AOGeLPX2/wA1HmZ7Ky8P2lY6Ps5t3dtw3G/ZdYZflRHIqeZ75USvgcv+Pa9ufcbd+ePTGf75m+DX1PPDHVhrxm5hK33pO3lPXN253u+e1ZeVYteqejsdzOz1X0CNs+bo+DbHHwif5T9P3+LHsvUpwjo2fFh+7+cMh0/e3h+FXdbaW7zVo11eLk8XInBD0PSc+5y1f9eKy9/2w5e9x0xn/wBKeDzI6Z2XJzH5mRZ1L1xUV1XORtURE7EWncN3onbbdk7c8byn6/3GHqG3DCMMZqGM3Xb90t3vctlwLGNZuIks1qNR3Oq0RU/Kp5Xf9p3GOXldrqwwxn/fFX9/s98+Ds7fdqmOvdnlll+X9v6Mn0/sOPtGMrGu1Mi5Rb13srTsRE8EPU9J9Jw7PXUccp5z+3scne97O/K+WMcoYfP6e3+1vV/cdqvMbrV4qqVStJIqORU7UPG7v0nvMO6y3dvlHxftXGJh3ae90ZaY17YngvdN9P7jh5+RuO4va6/darURFqqq5Uc5y8ETuOn0X0rdp3Z7t0xOWX8eMyy7/vdeeuNeuPhhsjshEPp3j9bEbnsex7jke8ZTXa0Uaqo5W1ROw8jvfRdHc59eyJ6uXCXZ2/qWzVj04zwTky7FpjbdvgxiI1qeCIlEPVwxjGIxjlDiy3XNvPf7D0cy4iPtuSjmqlUVF8UJyxjKKmLgx21NoFzYulbrpOxERe+KvYnqa5EPIz9B7PObnXH2TMful34+p7o/3JOFg7BhOR+NjsY9Ox6ornJ6HOVVOntvTO20TevCInx5z98stve57OGWUpTtwsp9KvNTuhzTnDGZm2bBlZjc3Iaq5DYqtHKiKreyqHl9x6Po3bo25x8X1+Dr1eo7MMOiJ+FOdutqXBeHceq4/MY7cNu6f3K4l3Lt0vJ2vaqtVU507flPK7z0bt+5y6s8fi8Y4fe7O39R2aorGeCjExen9qVbuJarepRLjlVyoi+FSey9I7ftp6sMePjPGf6K9z6js2xWU8Gt9S9QtVr1lxU9KZePu2uO9UbtqvdxKy8ffstouVdV71KuDKUeoQVAVAVAVAVAVAVAAAAAAAAAAAAAAAAAJ+wWEv77t1h3s3cqyxfQ641CY5j6T6lsysY11P8AxIr6lVDryj2p3RwiVe2MoxDOGWPNu+OjLe0WpJVsEcqfzuP8pE832fZ49OnGPoYTct02rHvLr2lW4nfSvaRTpmYYrfd66ftPtszsXVc9tWcK8CKRMwg7vvfTljHxXZWFqWnJWy2iLRCqJmEzB3Pa8zDsLYw10HqsLaJ2Inaqp4Fo5puPBpe8ZWC7cLi7ZYZhstqrH2LSUZqVVXKqfWXvOXdn8T09GusaXtr3mDktvtLVV4x4p+XsKRsbzqbXh5rn220SLF+VS3XbOcGX+zsTeMDJx1tW3X8dyOsvc1PaVtaVp3odenPg8/uNdT9bnfX97p7aelt3al+xjbrYtqtq0tEuI+nBKLxNbnxc8VyfO1j4g9RIxqLkVj28Eqpbrlboh3z/AA/dWbxu2M7Gy8pEtyo23wRV9BnMzPNNU781ERKIVWYbaUROod8RO92Mvrs/5ArHNm+4LMPn+W6/019fE2weT3fCZc5s4SX+ska1PI2+57vQi1X8oiLl81GN7a/4mW6yw1+08V/0XWl4c0d/lGcunvMOnOPqX9qW4mM2wnltVk5E7XKvepWE69mXT0/7WF60bbcitT6LKvd+ZBlzer22HBZ2e9Y3ra7WRNWZmEiWnOatHse32XJ/OaZzHG3qauVIudd3G4j2Jotcta3Yoq8eVDDLJ6OGuPZMsVh2PcbL2XLq3Fcsrl1/8ifRQ5s5t1YQ5v8AEHqRmfujMO0v6jGb63KvFTbTjUWw3ZXNMB05mqzfcW65U02XER0uyK+0bTHBjrmpfWGx4eLY6St2sJf1Tke9tPF/E27eI6eDHur6+LSsTYstL9xz7irJyr+UmMXPTK2MK9ZXtLxA1fr/AKgv4VzG2zGdS9eTUvKntI3sanymezKm2rH2ub52fffkKiuVVXjSvcniUiUZwvYWc5HNVF4J2GkZMMsXQOkuobzL7bL1VUciqzj2OT/WLTk5csHRFwH5eKy8xzW6jZI1efdUi4lz59hnPg1jdcS7Yuqj2qy4xa0/MqEvI24TjNTzan8TcFuVs+PuTE81tUmvJ3BfymWcMYcqZ/XoZEc2+dI/1rCYd/bu69J9lr0oXh7uhk9ub/fPeXL2+74iN9FHqpx6o/8AuM/qxa4f3cvqhnMiwy/j3bL/AGLrHMd6HJRTtbzFxT4n6g2PN2HeszZ81isyMK662tfpNRasenJzPMhi+K3ap15TjLb/AId9ZdN4uJ/091hjPyNj9497xL9tXzx76ti9HIxUctt6dtO/u8ExE83To2assfL3ReN3H0O9bF1N8KsHEauz7jtmLZcnGD7dt6/zq0f6y+MYxye9pz7bXHwdMLm5fFv4dbe1Vvb3j3XJ9DHVb7v9mji3VDTLvtOPPKGpXvjpmb1kOwOhunsndsusfeb6adhir2OdReDf57mFerwcs+pTnNaseqUzG+HfVfUbm5XxC3h13GXzJ0/t7ls4yfo3XsVHP/8ATzE1fNbHtc9nHdl/2Yb/AIVjbdrw7eDt+PbxMSykbVi01GManJqcCXbE44xUcIXUzWqtKi0eaiZmx7FuG7bdu+biMv7ltKXk27IelVs+8Na26rUrSrmsRCV42Q1vI+Dfw5u5F2/Ywcjb1vOV9y1t2dm4NlXO4qqWca9atIqr4NCeuFl3wW6BVFRz92VF7UXeNz//AMgHXDcdqxcDa9uxtuw0cmLi222rKPe+4+LUokn3Fc9y83LVQdcNRT4P/DV29X96zttXdc+9dfea7cb13Mt2le5XUtWbzn22NRV8tG8AdcNvvWNsv4TsG/j2ruC9mm/FexrrSsVKRVipGgR5kMV0n0f0p0lYy7HT2GmDjZt5cm7jMe9bTXqiIukxznNtt4eyyiBPXCbv+0bVv23pgbijnY6XrGQiMcrF1Ma629b4px9tiA64Ym38Oegk2N2x39psZu3Pv3cy43LT3i47JvPV77zrt2T1uKrvalUHXDEP+CHwoelF2u81PBudnsT1NvogOuG5Y+DtePtLNns2obdbsJisso53C0jII2VZez31qLOuEDE6T6Yw9lt7NhYqYuLZwk22xdsqrMi3jtarWtZfT9a1ySVZSrXj2g64Rukeh+m+lLubkbe7JyM3cdP3zNzsi7lX3tsoqW2al1zlRrZLRE8QdcJeDsHTG07ln7ttu22MTctyRqZ+RZYjHXVYqqivpwV3m7e1SFctsRCBu2UiotFIl5ncbGnZ9yTlKS8bbKDbVUeSwiWb2zJi5BDt0502zb9yRqIteJaJevq3Mom6I5OKk26vPVJuSInagtPnPH7mi94tE71r7Tai+0LV85Um5oq8XC0+cuJuaU7UFreeLuSL3oLPOepubUTtQWecoduSL9IWidyhd0T6wtE71SbpX6Qs85cTdEp3C1vPUu3W33qLRO9T9qWPr0Fq+c9XcWO+mii1Z3qffk8RavnqvtDhSXAWt8wpXPb4i0ee8+0U8RZ561d3JKdpFq5dwhXd2RF7RbGe4Rbm8tp2i1J7lCv7wzxoRak9yiLvVF4PFkdy9/6gc1PaqTbSO5WrvVEe1RafmUS51e1PpEWj5lGudZIn0ybR8yjO60SvtkWr8y9b1qn1xaY7lGzOtEVi0eLVy7lqG9dUOuySRFuTZvtpG4Z7rr14kOLPK2MctVIZPAAAAAAAAAAAAAAAAAAAAAAAAABlOlP/APqNn/37G/8AOaTHNEvqG/jpl4Vyz9JUqxf0m8UOyOMNox6saQ9vRUYlUovehlHNz4c253f/AMRb/wDds/MhE8323b/2sf8AlhoHU7l99d8hMNMmF6sxsrKzcVuOkn6SI1qcVVeSIVtEyyWV0Fue64W3rlZKbfaY3zorZ3V/o9jRGJTY8XYcLZsZmFiufda1qVvXFRXOVePdwQvjCappXVnT1/E3JdyssX3TMpr07GXk4VXk5PynH3Oup6oel2myJjpnmi42JRzblPSczsiWbx8tbbKU7Owm1JhtXRDb64t/MvcFzLyvtf8Au2ojG/mO3t8axvxed3WUTlUexkt76b6e3li2N323Fzrdzy3Ne0x7lSn1lSSGzlcr3/8AwtfD7OuPv7Vk5WzPV1XWbTkv2Ur3NZc8yJ/SJ4pZH4a/Be50ju9q9cvNz8S0rn2MlKtdVeyTPFCsymYt15FISw+2cOo965pir/s1QKxzZruCzAb5k28dblx69iJRO9Vp2IbYTUPE9S2RjM21vpDCdlbjm5Tkq/yoi83Ok78xGOVcXmen6J2dU+1M6ug7NxeHYj0/K0ZcoX9S/uLFm6y3bSKKi96+BEMu3xtqHU925dc/tW0iqi071Tt9RD29UcGobZvOfte82lxPMmU9ti/YWtHsVe3h3tKZO3Vwlu26LbsVc+rKd/alDi2PW1S1PeG7zmY7vcMdzbb+Dci55W18eJXHCZ+pfPZEfW5hvnTN/bXLk372plOVVci8E5pRe06o5U4552ibUtrIvdzKIqy7kXmiGeczDbVES+i/hL1JrbFewc9feEsMR9p9l0pNTg5PSg7bZ05TjKe819WMZQ2Nu6dJuuRRmQr3LwRErVVPS6ZeR1w0zrr4rdJ7Jks2jabLs7e7zm2lm+NjHW55UW45O1W1rFDnz3Vc+Dpw0zlMRPOWqO6d3S47Oy8q/wC/5lhjbdm+lUaq3OxXV4pFpz+bGePVHJ2eROGXTPOGq42xZr72VbbfsX81Uolhj/MiV7UqPMjh4KeTPHlabZ6X3qxhTuYztRq1i3zLRO3sLxtiZYZ6Mohmumkc3NtK5FR1t/mavBU4eBrlPBz6sfjdv2hcFu22G3bjmvjVU9PEnGOC22eKF1TYwruAt9jlW5Y76drF7UNJjg8P1DGJjq8GibpbtZvTWdjKtVajo/KlU/KZ5Q8a3Ea0vmC3tbv0ndRLrPSTDu0S7r0neSFtfCheHu6JZ62ml1fkcOGVg23NXxWxdc135LrTljhvn6cf3T/V0Rw2T9TNqtDrbNU60+HHSvV9tv2rYVmXbSNnPsKjL7U+rKioreTkVCJi3L3Haa9sfFz8XMsz/DEi3HLhdQUtV8rL+MjnInNzLjUX/NK9DzMvRvDJ7i/4YraXGrmdQSZ9JtnGRjqcnPuP/MOgx9Gj25Nt2X4FfDna1bcv493c7zVqjsy4rm//AA2Qtr8qE9MOrX6fow9l/W3fH+z9vxm42DYtYuOzgy1aa1jU9DWoiEuvrxxioWb2c9/Z61IthnvQrl/jV7q8k7CLcefcLD95xrHBXoi+CcVFsvmVKdRtX2E+VRbSO5e/brl7Xeom1/mVP20niLPmT7aTxIs+ZeLvPMm0fMrT+oLLOL7rW+lyEWj5lHudY7Vb9vLYnoWotPzKO/4g7Mzgl+XoQmz5lZd8SdrRfLJyePYLT8ytP+JeL9Bi/KpFnzK0vxLb3Manyk2fMqV+JLlTgjUIs+ZUP+JFzuc1BZ8ygZnxKyYrFzRbPLuGqbx8SN2cjkZdRK8iLcWzdbVsr4hdRKtEvpT+ahDiylHT4h9Sdi3W0/moQoyGF8St/YvmcxUr3tLNMcqbBgfFPdGIk4O+QW6sN1Mva+LGVRJW2fIottHcJLPiz9ewipyUWt8wufixhKvntOROS1Fqz3D1nxU2dy+fUbzpUWr8wmWfiRsNyn9qVq+DkFpjuE6z1ttFyiMzWVXsqtBa3zCZb6jx7v8AV5DHehyCz5hd+2H04LX0KLT8wodu7/FRas9wtrvDvrC1fmFTd4d9YWmO4XE3l31ha3zCh28O8RaJ7haduzvEWpPcLbt1d9ZfWLVnepbvF9vs3FFo89eZ1FlN7VRycxafPVJ1Nx87PlRRZ564zqHFfwnH0i0eeP3Rj/YuIvyi0TulFvZj17yLZztQ7uY7xFq+ag38t3HiLV8xBu5j/EHmSi3dwuJ3i1vNQMjdLviLT5ssbkbo+q1UWjzZY6/uTuPFQjzEK5ud1F4OUk8yVld3vJ3kHmLN3d7qp7SiydiBfzHv7wznJEe5VIVUgAAAAAAAAAHtAFAFAFAFAFAFAFAFAFAFAFAFAFAJ2xXW2N72+8vBLWTZeq/zbiKTCJfU+Hdq1F8Tr1y005F6wlu8r2p5Li19Du8ZY1KduFZX7JbFNHbG136CJ/mrQyy5vq+zyvTj9TV8zp6/um5V1dHGaqa1ylVp9VqeJWLb+1n7ODi4itfYtNa6kHXHIjnqnZ7SmkQsvPdPHpREW25UVE/IpMQhis/OfZRivxXXLdKJdY5O3wVFLRCV3CbZ3Pb1W/jqyzdV1pbb1RVVE7+BGURPCU45TE3DAZOxJt91bK+a322n+LfnQ8/PX0y9TXt64tHZjvu3reKxqTvuRiL4J3r6iuONzS2eUYxbeLdlLGK21YalLbUaxq8E4HoxERweRM3xe41/NuomuxjW9nBVV3ATEQL1qiuuCUDHK1rE8P5SJSkNv8Fc5UanDj2FZhNtTTPu2+sd0Szdq19mxJEoqVaikEM7Zzsh1KvqQmmu9SK/3m45fpIkV9DUQvT4/wBTifPymU3oPHVmDkX3JTVvKjObWtTj6xL0/Rcf+nM/8SL1EqO3O3bXtttVfWv+QvlPCHm9/P8A1a8CxZa627h5qeX0k4wnt2tdRPZju91xrWvkXEVjWolfNc5fWK5Rxe3p5NevdLblgbht9qwjcjccpW+82WUVLTK1VUf3RT2jLO7qHdqqrlv6dPYbH6mWuvc+i1f6tFTwTvEaojjLWd0zwhjOqMa9bwn3Meyt69Zar2YjErKidxbOEYT/AKuO7P8ADDeep7i7juzrzFyHqunxS41texGr7PpUpjjMtMsobJkf4edxRlu5sNy1ZusWtbtxUVy/pcFqWz08E690Ql9IdC9e9JbhkZm5WLVrHYy4626w9Llq67ti7sVvDs4GHy98bdEdzFUu/FDqV2y9MY1/bme6527IiJdT2rTFbJ6t8FU6s8p6IcOOMRnMx7HIPhjgY28/ETbLGWk8dLj770dxk5jVVqu8fMZYxEzELTM1M+DumJiX8Fm5Wb9ZXXo6rk7U5V7TiwwnXE4y9bZnG3KMo8GvrtmCue28ltjL9FpcRERUT08zOM5mK9ictcRxriyWZtlzKtW7Lch9niiytOoq07UqaYZU59mFxTL29gxG49u9fWeS1UYy9REetV4I6ntHRfC3HXxw2zbsrb8prrVpE1LHkcnctO9Do1Z3HFz9xhU8OSrdLFn7Oyat4abvzG88nid5Pwy0ra8Jl69fxlTg+MvRXj+Qzl4cuEbpZTH3bKsolEtXnsT+i5UOaV2f6byEbdZx7yYdWnJ2/o/NRbbEqWh7fb5Ny3V6Wb217q1fLYuaGQv/ALLJRGKq+i4jFOfuPhyxz8Jqfqy/rTuzmqy/bizV1adp1NJlGfdpxVaIhDnz2Ug393ttVWtX5SLYzvRnbu3srVRas9wpXMuvStYpzFssu4WL2dYtJK45PS75iLc+fcMPmdSsSrbSTXxXghFuTPewuXu2VfVZPVG/VbwQi3NltREyXV5+ItTzJVOz0tJK5caxvi5UQWtGyWOzOt9iw+F3Ma5yLRW2/Mv5BafNlhMv4sYLKpi2H3F+s9aILPNliMj4rbu+qWmstIvglVFnmyxWR13vl/28t9PBFp+YWebKA/qHLf7d1zvSqqLR5kqftu79YWnzZepvl36yizzZe/blz6yizzZPty79ZRZ5sn25c+sos82Xv27d+sos82Xi75d+sos82Vm5vFx30has7JQruY9/aoUnJHc6pCqmgHqLQC42+9veE2uJmXE7yyep779d8QdTxc24veDqUrlXPEhHUJl3E7wdSpM26nepKepW3c8li1bcc1eSqgOpKtdS7xZ/q8u63+koOpPx/iB1JZVP7TqInc9Kg6mVx/ipuLaJkYzLid6t4KQjqZbG+KG0vol+xctL3qnmQHUzOL1lsGUiaeY1qr9F/BQnrlkbefYvIi2r7HovZFyKSdSvUevMhHU8V7yS1KvcVLUrcd4li1Kvd4gtQ5ygtacqotUVUXkVRbz3nJZ7N1yekD1d0yU9tqOAoduVh3ttVoFp93Hf7L09CgQ77O2nEDHZDO0lDGZFshKBetgQbrAI1xgFhzQLatQChWoB5EDygCgCgCgCgCgCgCgHtAFAFAFAFAFAFAFAFAFAFAFAFAFAPWq5rkcnBUWqLzQD6Y6W3RubteLkItdW0x/+c1FU6MZUxmpbKyNy2rHdi/kOjnDvxrKKlPxnL9lX7LvatO/I7iYZxxe16Zl8E4zzif3qrNtrrLaKqKtfMnDjzIxekrk+239ZxZ2OXl4lx7bbR9xvbVEUhCwratuMVK0WtPSWFGHmstUxrqRRP6t/d6FFJXN1xfeMJ0eNy352L407fWhjtxuGunPpyYbpvG1s27mKnlspp2l/SdxcvyIZ6Mfa37rLhGLZlVEpVeK9x0uMbxd4EIUotEuLzArRaNRO8lKnIw8fNx7mJksnZvIiObVU7FqnFOZSRqeJtGh1fuFnFaq20sWrio5a0VapT8hWVobWzEbbsW6p+tcqJ6yEpGSy05WMclUTiq+CGuFuLuYxymIlcx3W1YqMSiItKfIVyiWujLGY4IWfjYz7yPuNRapGqpXsL4zwcfdaNc5dWShu3YbWzanHuRB1ynDstc8mpXOm9x+1mZSUS05XyqtHNa7grkKTLojRXKWRuYaMRtpjIojUalERaNTs4kVbSOCTax8hjaSRyr7KPStC8RJcS9TBaqOa5V4rW4+tHKnhw7ELRitMrltli0xXMYjbadiJ2uUuqtplXXLwdTwROCEJZXHdbycZ+PkNnbeitex3Y5q8FQrnCcZcZ/xFbI2x0mmVZRVt411jLHDgjHeVU/oldk3jEmFxlMeLl3Quxbpt+HtvWm3smmLkOt32dtbaLFXfJ3mMxNW3wmLp9Abxau520Wc203irNRWNWvlclVoqE9zE7NcTC/aTGrZOM+1ot6xkMyXK9quxlRKR/rGu8ePBUODXEVxeplczwZDbkydVrNJW2mqisvPojnV7eBOURHJz5Tx4ti3rK9x2T3mUch9WYzO9VXgrv6KHbr1/DcvJ37KyqGs9P7rcxrzHzVHNXiq/SRe006XL8zFcW9bnuVvJwG6K1ZdajnO/kNJyuHid5tiZqGJ2PGcx2VmO4NX9Xb504uUpLzXz11A6W+57k7FyLqp8txTnlK9tOStu43iG2uXWei91e99u2yrnL2IhaHq9vsdkwcZcjbn42WyVm+xWXGL2RclF4k5YxlExPJ7Gv4oqY4J6WXW7DLTVdcVjUbNyorlolKqvDiIiopfOJqoYfcsbd7tW2bKx/nsRV9aiYcG3TsnlDDfYO/3H+ezpt/nsVf8ASIqXJl2u/wAPfCVb2TcrTatx1c7xmyv5XCpU+U3/AJf3ImTt/VT6pZwoJ9ZbtpV/0xUqz2e/8vvhjLvS/VVxyq7FVyr43bX+uRUs57Df+X3wsr0d1Ovbif7S1/rjplSfTt/5ffH82Ozumut7SKmJsL8l1OCrk4jG1+W7UdMo/Td/5ffDW9x6U+NmTJuPsrMa2vYjMnEV3rW8OmUfpu/8vvhr+V8I/jBlOV2Rtr7ir2yy8Wnq1h0yfpu/8vvhF/BD4o/cv8Vifth0yfpu/wDL74PwQ+KH3L/FYn7YdMn6bv8Ay++D8EPih9y/xWJ+2HTJ+m7/AMvvg/BD4ofcv8Vifth0yfpu/wDL74PwQ+KP3L/FYn7YdMn6Zv8Ay++D8EPij9y/xWJ+2HTJ+mb/AMvvg/BD4ofcv8Vifth0yfpu/wDL74PwQ+KH3L/FYn7YdMn6bv8Ay++D8EPih9y/xWJ+2HTJ+m7/AMvvg/BD4ofcv8Vifth0yfpu/wDL74PwQ+KH3L/FYn7YdMn6bv8Ay++D8EPih9y/xWJ+2HTJ+m7/AMvvg/BD4o/cv8Vifth0yfpm/wDL74PwQ+KP3L/FYn7YdMn6Zv8Ay++D8EPij9y/xWJ+2HTJ+mb/AMvvg/BD4o/cv8Vifth0yfpm/wDL74PwQ+KP3L/FYn7YdMn6Zv8Ay++D8EPij9y/xWJ+2HTJ+mb/AMvvg/BD4o/cv8Vifth0yfpm/wDL74PwQ+KP3L/FYn7YdMn6Zv8Ay++D8EPij9y/xWJ+2HTJ+mb/AMvvg/BD4o/cv8Vifth0yfpm/wDL74PwQ+KP3L/FYn7YdMn6Zv8Ay++D8EPij9y/xWJ+2HTJ+mb/AMvvg/BD4o/cv8Vifth0yfpm/wDL74PwQ+KP3L/FYn7YdMn6Zv8Ay++D8EPij9y/xWJ+2HTJ+mb/AMvvg/BD4o/cv8Vifth0yfpm/wDL74PwQ+KP3L/FYn7YdMn6Zv8Ay++D8EPij9y/xWJ+2HTJ+mb/AMvvhetfBv4tWlRbW1OYqdlMvFT/AOcOmT9M3/l98MljfDv4249I7c5yJwo7KxF/+cOmT9M3/l98MvjdKfGFiUu7Ejl7KplYn7YdMn6Zv/L74ZTH6Y+I8f12xca//c4vZ8l0dMn6Zv8Ay++E630j1e7+s2d7OaX8Zf8A5g6ZP0zf+X3wvJ0R1Qv/ANCqclu2f5Hjpk/TN/5ffClehuqf/sv9rZ/1x0yfpm/8vvhSvQvVX/2P+1s/646ZP0zf+X3wtu6D6rX/AOh/2tn/AFx0yfpm/wDL74W3dAdXL/8AQf7Wz/rjpk/TN/5ffCy/4edYL/8A1/8AtrH+uOmT9M3/AJffCw/4bdZL2bd/trH7QdMn6Zv/AC++Fl3w166T2cBf/j4/7QdMn6Zv/L74WXfDb4gL/wD1iOT/AN/j/tB0yfpm/wDL74WX/C/rx/btP8RjftB0yfpm/wDL74Rbnwl6/d2bV/EY37UdMn6Zv/L74Rbnwe+Ii9m0/wARjftR0yfpm/8AL74R3/Bn4kL2bP8AxOL+1HTJ+mb/AMvvhZd8FfiWvZs/8TiftR0yfpm/8vvhEyvg/wDEjGtLcubJcc1KrS1dsXncP0bdx7h0yjL07fH+1p2Rj3rF59m/bdavW1Vty29Fa5qp2orV4opVxzjMTUrSoEKQACgCgCgCgCgCgHtAkoAoAoAoAoAoAoAoAoAoAoAoAoAoB174V75qbS3Fc7z4j1ZT9F3mb8xthPBllHF1XDyEc1FRTbDJvqzZO1cqx7frtov5y2cXD2ey3RGf1pllFbbanglVr3mMPdXaMVFSlUXgqF0Itm5C+tt3dRiLy+iShUiozJovY7goC9bYlxq07xAXNXFVblpqvsJxuWU7U5s+YjmkxbNqzaS3jsRrXKr+HBEVy1VRGMQTlM8ZXrLPM5VWrvFRKF1PbCRESLyEDVSq8iUq0VVWqcO5Co1xLqWuusiT4NuYttF50VSkrQ2PFVl79ZKTmqqIogyX3W2Kiy4+PEtcsMteM81GM6150YioiLXj3k5X7WeiceMYvH2Ue1Ud38flIiaXy1xlFSjvRbadkn9iITlkrq11zUPt3FaiKknLxeviv+QrTa1vQo9XU8y/kLxCsqFRtYsWq97i8FUiX3K92kxaMTi5f5QvHDisZeSltqNTs9hjfFVImTHFcttRjEVyVcqcELKzxS9vuv10R3FHIqegTyGO696ctdQ9H7jtT0TUvVdjqvdcbxb6yk43wT1Vxcr+E7m7HiZew7k1G4d6+59i4/2bOQqRu416vsq7tYvYpGnKuEp3a74w6g3breLhpj27Wlj3bVxzXOrpW0ovcTnw4YwYZTlU5S5vbv5+S+GPjpfZbqjrrlg1KL3v7DycMZy5Q9rPLHGOMs3t+NbdcamZktRUVKWMeqpXtRHv7VOvDRHtl5+3uJ9kNqy8DbN5xUw83GVrKUtX0WLmejwOynlZS0jP6VytozEt3nzsvVdC61Paai9/MrLmnV1xcszt1i9cwbeM32lcqNXl4iIePvwmMqTt1uWsHbnNZ5WWWKvqSqqRLmz8HzHnPW5l3bi9r3Od61VTnlEs/wBM9I7puT23nNXHxO1bz04r/NQlMS7h8PtiwsG/bbbt1tsarn3X8Ve5OwnF6np9ZbKl0puU3xLvouoXKb4gtbdlp4hHUoXLTxB1HvaBHUe9oDqPe0B1HvaA6j3tAdR72gOo97QHUe9oDqPe0B1HvaA6j3tAdR72gOo97QHUe9oDqPe0B1HvaA6j3tAdR72gOo97QHUe9oDqPe0B1HvaA6j3tAdR72gOo97QHUe9oDqPe0B1HvaA6j3tAdR72gOo97QHUe9oDqPe0B1HvaA6j3tAdR72gOo97QHUe9oDqPe0B1HvaA6j3tAdR72gOo97QHUe9oDqPe0B1HvaA6j3tAdR72gOo97QHUe9oDqPe0B1HvaA6j3tAdR72gOo97QHUe9oDqPe0B1OK/4kNu25m27ZvrLbWZy5KYV241KLctvtvuNl4xW3w9JXKHlep6YyiMv9ziTfM1F8TN8/MCooHlAPKKAoAoAoAoAoBVQBQBQBQBQBQBQBQBQBQBQBQBQBQBQDP9F7su3byxHOjZyP1b/BFr5V9ZfCeKuUcHctl3RHNRFU2UiabLj30VENcMnZq2MvaymutJJEWPDmUyxp9N2nceZj/wAS819t3mZ/6fIHUi5iNa5LrexUTjzRSYRKq9Vb0u5ERSUSvK9LjWrzQqm1V+umqJ2rw9YgLdG8E7CLHiLRE9a/KWFbXK6ip2FRcanBefaSlRbbJXJ4uWvyCUL1OHDs7EKrNNzWZjutLzXtTz22NsU72dxSUw3bEx0sWG2+1U9pfFQrMvb6+Utix28kOxfRuUlrvuJX1GmXJxatlbOnxT1TwMXpLbmtRa04+JItqqJ2cFLQqh5N1PZTgna5f5CwsXbunjuf3r5UQmyIuUNHJwTvVauUlZEYjbuS6+/2LdWs5r3lY52vM1FL6rqOSPy07iynJMxnad5lPRQkXN63HGw9ov5GS9LVhqtR153ssktKuXuQRzUyuY4NZbsGzZuV9q20pmXKWUv2HNc25T/xra1ZcROaE7MImfpRqymIr2M1vWI7E2hcHGc21buNpkOVaIjV9rtXymUxFNcbnJrybItxbLlarWMWNpjKKyCd6InArGEexec5i4lLxMDHsK5GQjKvBOKKve5e9S8QwzylMR1tj0ZV1Wpxp7Kl4cuzkubxbs5+zUckrlj9YynbwXinyoVmOKkZx0I+NYZjWU4eaKJ6E8CZ4PG3ZcZlq3WF3KydvyMbESV66xbbeNESXCq/IZZcnFzlp2w9CbfhubcyWe+Zi91KsavJDBMt8wdmaxqPyaI1Oy0nBqekhCdibzbZmNtY7ZNa1au7E9CFsXf6dlWz7GVTer31UL293zBd6vfVT1izzFC7xe+qnrUWjzJU/a976qetSLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMk+1731U9Ys8yT7XvfVT1izzJPte99VPWLPMly7/ELnXcjpHbmKiIiblbX/AGF4S5+5yvFyHFRdFpV8/nzXFQqopiAiB5EDygCgCgCgFVAkoAoAoAoAoAoAoAoAoAoAoAoAoAoB6nDinaB07o7qJcrDbJ39ps0beTvXwd8p0YzcMcop0Xat2a9qIqk8k4zTYsXLoqOTinh4mkZXwd3bdzOGVwyzX4mkuRJLbG8XKq0p6StPp9W/HPHqif6IWXuW3ZNq7YsXkW9CVOKSRO9C0YzCmPd6s5jHHLGZlYt3nzR+oq17q1QS0iWRsXV9fEhZJk1yN5KlUIXHokloice8QhS5fNXuQkGL4iRcV1ErUiBXbbFnH2l7SJSutTy0KpWW7ZjpuK7i5K5GklptexqIqqqp6akSrMpiqQLF9yI1XO9lC2LHbMRFyxDbjkykv96LWnLwOiceDxYynzOtnkVHNRU7FSqHM9+Jvitr217glZuJ2r3FoGKvvdNURe8JpZ3G4rMVqdqIqVJyngnCLlj7mW1lhz1Witaq+pB1cE9PFewmNdg2HXEpVqLTvVV4lseSuf4pX3I1qRaiNTvRCZREPbVxdZnele0iEy5x8Zt53G9esbTh5bU2myjX77jI1HK51xyLYR3e5vDi1CcoUhzjK6Y+IW15OLnbZevu27cK3sHPw3OcxtuvmfdZ/wB2jUKTOWPJbHGMppvljqTNyG2ly8l+SxGpaS6qqrsh7OHsr9E83LblM8Xs46scYqGx9ObxktV2PKSOe17KJVG3EXjFfR2mmjOYmnP3OETF+Db8xm3XLyWrTEtK6r5sXy1p2qngejTxpy4sejqP0Wybp8Vd9F3yqIYbPFfTKs2bbnXXIlFRWonaikuHOIj62Fzd2e+TWeVtfaXtKTNvN25WgMwcjKVF9i3Xi93f6DLZLGITpYG3W+5X/wDaUyJYzLz8jKXzLC13MT+UgV7VT3xGp9V38hMO3sP7n2M1Eu9oiAiQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBTmfx8b/dTb/8AmNv/AMi8GO/8LluK39Q0rLwc+atWkKKVaB5QDygHlEAUAUA8oBXQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQCZte439uzGZFpezg9nc5q9qFscqlExbqGz7zbv2WZGO+rHJ2eC96LzOmri4YzFNt2ze0VEa5SqYlsFrMZesvty8t1qscnJUoWjJ1au4yxuvax93AuW0q1fK32XJX/0Q6sc4lxTqnGeqJ4+L3Ayn2nNxriyVqcHr3p3GeWNPpuy7yduNzwy9v8ANseMqror9ZtV9Rk9XGUuKo5nNe384XXJLXivYB7bRLsqL2LxImUUrXHWioioLTSzqIq25ORqIqq5F/RJUnKI5y9ZmLduadhsl+tQiYrm5/muqaw4ptjHexZ3Xzf3J3J8hSZbYYZc8p4r6uKtVCqSIOXcW4sG+wn5VNMYpw9xl1cI5I2mXty+WyODcV1rTXtZ2egyyh6HbZfDXgvPKuhYcqLLj2FoGLvNRbqE0si7olcZ/HsRF9SjPknXPFruSvvVtcNr1Y6+qW5N7URV40+Qz5xTeqm2wIi24o1Fc5rUYxPqoiU9Zq5qeRuKtI05KTEEyvoxlty3XLFjWq5V8ERCytuZ9RdP3Ot90zMvDz27Vn7Ylq1jSZW1feiK5zL1ONWtpFxn1WnLGljp/qPqro3DTF6k25cvp1znM9+xqXm2UcvnTy/R/RcWtFVLO2dm6U3ZqZ+HbZ7ndVG2btlytattvGLadiqYzpwn2OnHuM49tslfs2sKLMDHRiNb5aeyndxVeJfpjHlDnzyyy4zIuRcsWpXLiXL70o5nYlF8CznmkrM3J921bZbYjUVnFe+icC7kzmuLH2beReuuRnnSlFr3LzKTLztudpDMDHs/rr7kdTjVfZQQ4c+aHmbyq1ZjJSnDUX+Q58puUUxLlVXK5yq5y9rlKoWMvNx8Wyt7Iupatp2udwIQhdIdWY+69Upg4ltVsts3HuvO4KqtVESifKWxd3p/9z7HQ9PkS9ujT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCjT5Ao0+QKNPkCnMf8AEAiN6T25V4f/AMlb/wDIvEyw7j8LleIiLYbRa8CjwM+a4rCFFKtApVoHkQPIgeUAUARAqoSkoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoBkdm3jI22/JtXWXf1lvx5pzL4bOlXLG3Qdt3azk2m3rL5NXv70XwU6qiYuGUxTPYW8XLdKrVDOcRn8PfWORKqQtGUwnI7bcl7H3Gxc2vmtrBVr48FRS3mS6+37qNc3MfdwZ7Eftr1tpZuva9EgjH9/qI6nvaO/wBOdRfH6WQdjVRsnUVq8FQW9CEXKtNa1fOse9RaaYi7dVjHKj+Ll8ePYRMphr255F9zVVH0qiqjqr3U5cytpZvp7CycfHRu4PRbiLVkFrVF7KqpbHKYhy7tGOeUZNjw7yIqoxkLfc7vUTxaY4xjFQnsuVQquqc6iVAi3MiqK1F9JaIZZ5exHc5EJtn0Km0VE5i1Z1q7aqx6Ob3CU4xU2lq+TZJ2KhR1RNo8lSaL2qhaBis7Ks47p3XRRexO1V9CC1mt5/VjUc5lvFc+qKjZORtfyETkRis7FvOPmPfdu2H2brPK1F7vFe4rhlHtX2Yz7GwuYqtRzH8VTy8/lLKPcJbjqtcvmStC0Kys75fdY2q65yoleDq8PKnF/wD2UJmeBHNomyz0LN6LrV+++5fci1RF1OKf5rKIZe1vxiGydPZLE267beiuYjnz1ESjlfwVHNXtQ0wngz2RxaVnYuX0fujNw2Sw/K2XOvIzcdpa1XNsuetG3rKJ2ESiGzZGetx6uRywclUtrw4JwX0CGeeVcHrXPe+0jXOerEi7sVPS4s5NmfCU23jOYrXXlRzk4onYiIvcRMy4NmcSZm441q4tyyiuuIsaN9mnPxEQ4c59jFZWTdvuXUdVEXg3uK7MvYxr2or3ohkrLWeoOs8Lb62sdUyMrwavlb6VKquf7nu+4bld1Mu6r/qs7Gp6EA2v4Nsr1iif/trv52kw7vT/AO59juukXe5RpAo0gUaQKNIFGkCjSBRpAo0gUaQKNIFGkCjSBRpAo0gUaQKNIFGkCjSBRpAo0gUaQKNIFGkCjSBRpAo0gUaQKNIFGkCjSBRpAo0gUaQKNIFGkCjSBRpAo0gUaQKNIFGkCjSBRpAo0gUaQKNIFGkCjSBRpAo0gUaQKNIFGkCjSBRpAo0gUaQKNIFGkCjSBTln+Ilqs6Q21f8A/Z2//IvESw7mPhchxFYtltW0XxQo+fz5pCV+i75FCj2ru9vqA88qgeRA8iB5EBED2gCISRARARARARARARARARARARARARARARARARAlYGflYN3UsOp9Zi+y5OaFsM5x5ImLbhtXUmNlIjXLp3u+25e30L3nZhnjl9bKcaZ2zmp3KJ1qp9nc7raUcUnBZtnSF69k3H5Fz2LXlZzd3+onHD2untY+K2zXdxVX/ot7C/RUPTjuerL6EfI3FG2JO4V83zGGXOnraZ+Hqlh7rsvJsXb9t7bbLfZXvdTsMssoh1YYTMWw3Ty5G6bhde5WNSxVHNVOMlpX8xXLJpjg3Rlu27teqqnBYrwRTbDjDnzipX7Lm20oiqvNe0tStpdrJSqJUii0jIufqyIJaH1x8Tun+kbLVzX6+VcWjMW25JU7auVfZLQRi0VP8Sm2XluPbtD/AHe1GbkvIr0RVp2URKilqdN6V6y2PqLFW9tmRqPsx94sOSNy2rkq2Tf0u5exSIhWYbFjvmi8gdKtz48K8FCYilDHNV/bw7ws4/unU+/7ru159jGZZwrb1ZbuX+KOai8Is8Dk2bql36e26o4yymK+9k20a9Ldp/0ltt4epTL5iXRHaYwnrgX2q27buqr2KiyRER1E7vBzRG+Vcu3xpmMXOuVS3dYjWP48qqnBU9J1YZuLPCk/FdaVGuWqXGonFP5TXGWEsT1JlW87bWY1rze/3UsMcncytbrk/otL82d8UO/t70fb0X0Y1aObRPZ7EInCVsdke15j4tzDblKvFHLNnHl2CImLTOUTSw25duoxyK5tVRWInCnDsUlSc+MxitXca5rK57k01T2eZWZlhtrHHn8S3bv42OqsaquuPSiv8UTuXmVhw7NsyXsl9xEdJWrRG05IXjFx55yjXbtOzh4oTnl0/W554oeduGNi29S/cS22iqle1UTvoc6ktB3/AKxysyVjErZx14K76Tk/kKqtXciqtQqpiBvnwXb/AH0T/dbv52k4u/07+59jvUC73CACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACACAHJ/8SDadG7b/wA0t/8AD3yJYd1+FxvEb+oaUfPZ816IUepVOwD2vilQFE7uAHtF9ICnIBEDyAFVAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAMlhb7n41Gq7Vtp9F3b6zfDuMoVnGGdw+psa6qNfW29eFHcUr6UOjHdhP0K9Euy7ClvD2Ww1rkVytRznIva53FTao9jXXn04zK5cymoqSWjfpLyK5urtquL5MPum8alxGNWKVo05pxp7kbeuYrkmYd5bjb2FaciPSNy2j+xW18xw55cXsaseESl7fhY2Ln3b1lIJe9rmVtrEMnjq5EdJGtVVVfL3815nZp/C8/f+KVxHmrFUx6oooYH4mde4vR3R+VvF97UvcLOFbXtfef7KInfFOIqkxFy+Rb297n1bl3Hox2Rl5T1VyPb5nud7S1Tv5mOWdOnDXfJcx+iuqMNb9vNxLrLK2/N5VoqN9l1fzlfPiWk9tlHsbD0j1LuWzdWbfnYV9ce4lumbYctEvWUclUdKvs9xphnbLZrmH1n0xu+Ju+2W9xw3Sxr/G27gtacF7C7KGRvEJRr1zSsX7v/h23O9SFZngmObhzuqtkdub8a/lKy/NUorHttyr7KXKQVUPJzm5t7+rGoiGds7/seHeVMrMZj14MmvFfQiGdtpx4Nu2fKws7bn5GHebk2ntc21cYv0uzj3pQ0wpzbIm03LxUt2m3FqrdJEVU8aJRfyHfjyeXnzlS51xMa7ba/Tu3LaMY/tpLvoaw58mv4O05Kbwr8jIe+xtTW2cS0zysVXpVzlTxNMY4sc8mcS296KvYb4w5tuXDgtXGWksXFdxVE7VUrm5I2ywz823ZV1y3K4qtaxadnDhUxaRvmOEIV69eer1e9XI9P6uvAdLDPdMrLXJRup5XKlI93Avjiwzy8FC5cFi3iiJ7SrwT5SueyI4Qxnix+dvFrHsLdV6NRvBbru9fBjfpKc8ypMtE3ner+dcciK5tpe1FWrnU+spLOWIchVChUCpQDfPgsn99E/3W7+dpOLv9O/ufY73Qu96igKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCigKKAooCnJv8AEin9zdt/5pb/AOHvkS5+6/C41hp+oaUfO581+gUKAKAKAKAe8QHDwAUQCugWKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAZnpDaV3TqHDxKeVz5P5IxFd/IWxi5Ii3XNxlbs41tvlV3nVE5IbQziES/l3mW+L3L8qqWjOfF1acZ9jF2n37uSlx7lRGr5U8Smeb2u1wlsllttvu2TxS8iq2vJUOHPm9zVdUzNi7adjRVaOrVq95E5cG8YzadYctFU7O2vpcXeTHUuIpu5FbHVUsOIf4jbl7f976c6J2/wA2W9t3NyFVfI1jvKkv6LVMN2yIh09tqmZVdGdI7bsTbONistPyrSJqxjqKve6ntHlZ5TlPF7WvHGIdMsW8a/b0rjEVHJRyKlUoV4DiPxs6W2jbcrF3a1bayxbVbStakeDvMvbwWX5zp7fZxpzdzr4RLsnwCZlM+Gm2reVq2rk34iJKqWHOWEpd68j0Il5cugXu8kYnqG5p9PbjcrRUsOVqp41Sn5TLdNYzLXt4vOI+l89bv0xfubirly7yPvKicL74U8G2aoxvpoeRGdcH0kYRzbZ1p0devW9izcXLfYvMtJauY1q77u9305seiL5qkTwRjxmY9jeOmcXNtYtu5kXHvRUomorXO4dzno1quX0lsZnnLn21HBI3nOuOtpiMY5FVtu4lxFolG3aOatOSG3XM1jDDoxxjLOfq++Eplty5N17kXSYxkVXs7FU74eRLxth2Pbc56+a67UcidyuN8Jcm+KWm33UVGp8qnRi8/LP2MRk3nJcuscteC0RfWgywcUZ8WIuZEbbVX2uKUb2fKUjBeckO7m2mK+jqvXjTtoVyyxxVnKZRbm4vcsG+d6Iqqidiel3cYZ7ZlWWJzd+x8Vy8UychONticLTF8VT6SmbOZavnZ2Tl3lvZFxX3F7+5E8ETuCkyhu7SqihUA8oAoBvnwWb/AH0T/db352lod3p39z7He4lnvEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQOTf4k0/ubtn/NLX/D3yJc3dfgcaw0/UN9BR89nzX6BUoAoAoAoAoAoAoBciAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiB0H4L4KXepL+Q5KpYsKiel60/kNdMcW/bxeTo+44Vt+ay29tUYi0+VVLzDKcamll2xPuJRtKdyd5Xol6HbzDH3trdj3o3LcV7qp2mGdxze72+MTHA3VNDCs3UX2F4ocmcvV04pOx3Vy7lljVrJaKVxi5ptl8MTLZ7yNZk3GJ2Noieo9jCKh4Wc3NqK9pKqq37RYc46m6WsM+JN/qNzFR3uDbdt6qqorn+V1E7Gxaz8p5fc3jlPhPF7PZ1lhj4xw/j/FiNw6Y6gt5P2quemVhIrVs4K2bTEt1XtbdYjbrX86qinL1XDtqpZ7qLP33a9vwL23Wb+XlZFFcll9q3w4J5n3kc1KCERxtqfxksXt0+HVtcrFv++ZeVjY9mxeY1t9Lj7sfMltVY7k5vahrqyrK2O3G8adu6S221tey4e2Wkpbwce1Yai9v6tiN4/KepDxmUvrQkY7drT8jZs+wxs3vx7iMb4uiqon5DPbjeMx9C+nLpzifpfPrr99+4WLDLmQzcc9ypj3bTUgiMSSW3Pd5GoqJ2O9pTxdeM5PqM9kYxc8me3ncrdraFxd/z8xMm29j8fGS1PTexPK5jbKOe1vi5Vp4mk65ripjtxnK8abz0dnZl3bbVjLcj3I2Tbqdjk7lMMc5ngruxi7hm8zGclu091K3FalvxRqrVa+o79WuY4y8nuN1/DHiutZqOexVqk21T0JU7IcJm/S4d1fUaY8JYb/wyw9vLRbqMj21OmNkU8DblUtb37cLtncFa1ESTa/yFM98sMWtXtxuverVcrkpWDe058tmUtLQ7+4NtVW49KpRUt217v0nFFZliczeMm/VjXadvuts4J/lCsyxyqq9vHmVVmVChRSqBDyIHkQEQN8+Czf76J/ut387ScXf6d/c+x3uJd7xEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEDkv8AiUb/AHM2z/mlr/h75Eubu/wON4bf1DfQUfPZ81+IUIgIgIgIgIgIgIgXYhJEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEDqHwRYmvu7+9G2E9a3PmN9PtdHb83Q9xY1ucy52te2nyoXyX7jCsrXrN61wq5E9JfGYb6cWRZj4ebZ0rqNuJ+VOaFdmMS9XTM4tP6y2q9jY622sfda2i24NV1UXxoeVu1zE09vt9kTCD8P8XOfuKudacyxZ4ue5FTj3IlSO3wmcr8GndbIjCvbLcMmvvV1e5VPVxeLlzW0rxJQrYtFSpNopg+smIjce+jfbRbbnejiiflPP76OUvU9My4zDn1nqP3vLfj28hHuwlbqYPmZBLlVbce6lFkicO486ImrexNTNNk3DqVWX9qZ+qWxcY9l22y4161SiNWicWk5ZSrjrjjDNW8Bm6bjhZOQxXYm3u95soqIrFvo1WW0/oo5Xeo6+019U9U8nn97tjHHpjm2vbH8H+k9F5a/lXERCRAdu2LZfGUn/o9nDmWjCWc7Ihybq/asKzvd+xaa33fLrftWHUWnGrqIvc16nk91onXlcfhl73p/eeZjU/ix/cndLYdmxhvtNuWqXVjfc1rWqrVTsVacTnnKZehsytsu1ss2LcLKeVnlan6KdxXDGptz7M5ng2XdVncwrjWKlq61r2eFFbWh62UcYeDC3jJ5rjvrPXj6C0Ky8ykRWqvJS8OfdPCWstdTLsoiKqq7sTmXh853E8Ya58QW+7ZOHVaK+25Fa3k6vFf6RXYryaXfy0Rqo2jWL2q3v5czIti716XbwTuQqi1lXEoedpCHioFSICICICIG+fBZv99E/wB1vfnaWxeh6d/c+x3uJZ7pEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEDkn+JVv8AczbP+aWv+HvkS5u7/A43hN/UN9BR89nzSIhQiAiAiAiAiAiAiBciFiICICICICICICICICICICICICICICICICICICIHsUA6f8E0RLm7+jH/APmnRo9rbTzdSybKXbPBPMxZIazDu2YdWH0ws22MVEq1F+QnE0pFvFx3LJrdN/1mLRSJh6OtMuNc/GVqulcRKNd2KvpMs8XTixe1ybde1yUcnainPgvK1lP/AF9xOZ0wxlZ1OAQuWpOSS8G+Kkppo3xEz9z23cNv17zn7PmK9jLdERGZLWpwVU4+ZlVb8pwd9MxEflep6fjjxr8X8GCw8Ta8m/ZyGuS1etpBt5tW3GtVaq1VarVicGGVRwepfjxbB/09smbudm/jW7L86yiLlZqtrdexEVGte9fM6NeDew2x1ZbZ+iHLt7mNcTw5twsst2cdtu0lGNSif5T1MMYxioeLnnOU3PNHZvzbCPt47dW6q8HfRT5zbDXM82GW2uSNfzdwvcbtxfQnYbRjEMMspnnKy1rnXE4qq0715lmctb+IvTuZuexLm7ejvtXa1XJxmtqjrjWp+stJT67Py0ObutPXhMe119j3Hl7Imfw8pa10XuDNzs4+cl1vu9Y32O4OoqcFTmfO5TNvrOmG25+e/CwkxsOn2jnXWYW2M7VdeyFijqfoNq93JCdUTllEMt2UY4TLrd2xZxdtZb9q3jMa1JcfKxETj8h72McafN5TUWhPwLSslir5XeZGqvDj4KVnCkxsiWHz0VjXW1RZd/cHJ3WyKqGDxMS7kbhaY3yst1e/wohfCHibYvKGp/F2LMjbWpwSF1Xc+LaFd08VMp4ubvc5zuPZ3J3GKqmNQEQESEEQEQEQEQEQN8+Czf76J/ut387S2Lv9O/ufY73Qu90oAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoByP/Esn9zNr/5ra/4e+RLm7v8AA47hN/UN9BV89nzX4lVSICICICICICICIF2JKSICICICICICICICICICICICICICICICICICICIHsQOi/By6jM3crfe9lpU/oq//AFjbTPFfXzdbtu4G+T1dMrL2QfROxeKE4p6OnL6Fy3cVF4CYdeCW16d5Sm8SqSzae9XolH04uQplja1sFuWLkMzXJFVS6vkcnYpMKzC03M2XCX+252PZVe1b11jUT1qXx15ZcomTqxx5zCVt7ttznXH4OWzJt+VyttuR8VqqJ6GupwInGcecLRlE8mvdT7bkb7iZu237C1RjnYNhPbTItee26veqx9Rz9xj1YTDq7fLoyif2ppd3bHYu342S2xR7kar2qi9tacfBTw6mHtXcqekcrIyOtN7utVzbWFYs48a+WUnPVfCX8h6vYxzeZ33KG3JvtvcNvS3jo63dc9zMi2qpK2je32V+lXhyO6MeLy85plNs2+05LaInFyq35U/9R0S5I8GVxdvsXLV5VSqWnvZX0IikTNSmItFt4lttvEc+3JLiOkqKiLVV5i0TBfsZGPkwsWHPuI1brGqrUVUavYlK8SYmFZiYaH1f0nt+Ng5u/bdYTAyrLky7thqItl1XIlyKURWy9qnieX3nYxETni9n0/1HKco15feyvQewU6hb1N1NetY19GJb2Tbrzka6w1zK3Hurw1Xy4/VTgO27ScI6pjj+5XvO+xzy6In4f3urudauWlRFR7HJSqKioqL6DphyyxG3V08iyq1ZjvVG18DXPxc2OM1MLOZbZcaqPTjRVTxQplDh2zSLh4TsS3cV6ee5Ra8u5C2EU584qL9rk/xbvJc3nEtIv9XZVV9LnL8xz7J4uOGiRKJIgIgIgIgIgIgIgIgb58F2/wB9E/3W7+dpOLv9O/ufY71Qu94oAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoByP/Es3+5m1/8ANbX/AA98iXL3f4HHcFv9nb6Cr5/PmkRIUIgIgIgIgIgIgIgXYkJIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIqBtvwyy/dupGsVaJkW3W6c+1PzGmueKXa7L6odUvQ0ZLr0Rzad/cViaehEdULNtVR/HuLrYJCdivd7KcQ2hXiXXaT7juz6KFZhMLG84dnddpytsvOcxuXafbS6xVa625W8HIqKi1b2kTitEtI2v4YdH7c5ty9tlnNz2I1LmXlIt5XPaiIr0a9XNbI6/mtnTXVNObycIm64sz0NhttdQ9T3ktttsvZNm1ba1EakbdltKInpI7rK8MI+iVtGPxZT9LOWL9rE328uW1K36Jj317Govd8vicMuuuDD9bbcyxK8tv8As91dREThS43iqL6e083uddTfseh2ey4r2w1Po3CZc2bM3RLSNTcsp6uX6zbSaaL+Q7OyxrG/Fz9/l8deC9tGA7Hu5klRyazm23IlFgiJRF5tO6IeXsybFi5Gg607uS9ZuJ/Mufq3+pyF6tzZTU/azW1IqbffcvFbt6875JK1PzFcubTDksX0pa29neo8U+D3dLjrG5WbrVorG1r6FqRjyJ5vLbLW75Go7hhW3RRtKzdWXf3NLTPTFe1nXVlfsXm4WFdzL2tZbcRtt1EekqIvdxKzM00jGLSNuxsTHxWvtWWW1TsVqInavIrlNytjERCjbnL77lMX2XOVy/ItSMuS2PNWsbmQ+4vs14ehBTh2Y9Wcz7FnNu+Wq8BPCHD3ObhHXuX731Lkqi1bajbb8icfyqcufNzYxwa9EokiAiAiAiAiAiAiAiBvfwXb/fNP91u/naWxd/p39z7Heol3vEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQORf4l2/3M2v/mtr/h75EuXu/wADj+C3+zt9BV8/nzSIlVCICICICICICICIF2JZYiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiBO2bKdh7lj5TVotq411eVeP5BElO+YWQy7aZcYtWvRHIvJUOrGW2nJMR3AmYerqyHoiNV69qflEOqrRlu3biQdwRC8JhLsPq1rfop2kStCu+tNN6fWqvoUiCUPKe1LqtVURVWiFoVliuk3Pdf3LIbWT8256Fbbo2vyFu5/2x/wAJp5TP/E2rKxbO44dHoiPXjbd20U5W0SwGdYycrZs3ZMt0LrmOt4mS7jpvVP1cuVV9Rnt19WNNtezpyjJBbiO6f6F23ansR25WbCItOLGvT+seq96S9ZfRj0xEM9+fXnM/Sw2ytVNssVVXOVqq9y9qvkslX5TrhwZTxllcZi3bTrSe3bRz2eLra8XonNrvMWialhnFsltWelLWMq1VbDriqnZVzlUZxxTqngkZFFydvtp2olfUU8WvthTv7JW1uJ7SJRPlIxMlzpzybXYZ2K9XPVPS4nOOKuuXrbi6mW5O2qW2/JxUhe0222mI1idtCs80zyQMF7pZConmesa+lSZhlOyfYkteioq/QTgznTvDmzyYjfs9mPi3LjlojWqq/IhllLzN03LgmXddkZV2+7tuvc9flWpzTJELUSUkQEQEQEQEQEQEQEQN7+DLf75p/ut387Ri7vTv7n2O80LveKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAch/xLp/cza/+a2v+HvkS5e7/A5Dgt/s7fQVfP580iIVIgIgIgIgIgIgIgXohYiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiBUxvEEOr9B7ymTtduy9a3bH6t3oTs/IbYSjlLc7b0pVTbm9HRm8yn+wxPSoejhK2nFSYlov2lo2neWF69RWIngUhMoGZwyaryX8haESjdEXrTthY6Cuurdv3Vj2rK45UJ7r8dfQaI+FsOFfZcsW3sRUY5Vii9qJ4KYNJVZOFbyavThdZT0ORPERNCJlYvvFhbd1snsYrWKvHg7sHtQ0fbLV+DrLmql1f1iM76uSrk9Z1zHB50TxlksNytc26zgtt6K5F+i5eCL/ADXey4omWM23LX7fyMZiK3RXTRvg2S0T1GmXKGWqeMw2XGu6+5o7tbaSLTOeTojmvb2q+4ucnajkr6ysJyXsBbcLStq1GtrQnKUYxSFYc5ci5x4OeqhMMuxVgngZylCREYxzexHXKLzTipeHPsmoVXrqNZXuQrlLi3Zuf/ELd4bethq+fIWKJ+inFVMM5qHHVy5pEyaEQEQEQEQEQEQEQEQEQN5+Dbf75J/u1387Ri7fTv7n2O7ULvdKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAcj/xLJ/cza/8Amtr/AIe+RLl7v8DkeA3+zN9BV4GfNJiEEQEQEQEQEQEQEQLsCqCACACACACACACACACACACACACACACACACACACACAFTWllmd6T3RcDcmyWlm9Rj+S9ylsJqSYdXxMpHoiL2nRE0vqzpIyXqizTsTgpenp6tirHc19FQh2Rkk04krrrnVUQhjt4eluxcvf8Ah23qq+hqlsIuTJhOl93xts27EtXlVXrYa5WtSvF3m4r8pj3e7GNk237bRllhFNn2XdsLMx3JYcjVZccum5UqiKtTLDZGUcF9urLGeKdj7njXdwdZtPmrWLqU7K8KcR1RM0plhMRcpT2tqq9y9noUvDNoyNW5bbk2lpesucxy9yrbeqdvjwOyOTz8uEslZtNfS+xnluJVW04ebhcYv6KlZWhouPl41jrLeL9l6vt3LjLbWr2sfbtxele/zF8p4RDLDD4plsm0bm1udZtUlq9ru9PAzlvDMbtdlira73uT8nEiCUjHbpYfHgqtohFrUtY1qiyUTJTIW3tgiesqrllUIeS5GwTmqlrpwbc2NzszgqVo1O1TPm4csrcm6n3Fdw3Jz0X9Vbqy2nJO/wCU588rlMQw8DNBABABABABABABABABADa/hlumHtnV2Ncy3pas32Px9V3BrXPTy1Xuq5KFsXb2OcY7It9BULvfKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAKAcR/xLb7t67fs+wNuNfuDstM25aatXMtMtvtork7pOueX0KRLk7uY6ac4wGL7s30FXhZ80iBVmQAQAQAQAQAQAQAvxLLkQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQCNArRFQJb/wBI72uVYbYuO/tFhETj9JvcpvhNwrMU2+1kNcxUcla9qGkS31bKeYKxvrGsF+ivcWmHo69lsmiVWqEOrHJ6jFVa94tqj5uK3Is3LNziy4itd6F4KTaKY/L6LsPx2rhOW29qf1buLVp3VOHd29zcTxderuq4Tyay+3m2cv3WykLyVarFr7XhwOCYmJr2vSxyicbbNs9hmJLjdS9cRFfddwRHJwilOxKnp6dUYQ8vftnOfohNZvVzFuQyr07fBESnGvpWhoxpwXbuoN3tdZ7znbRm3LeJdyH27mMq6mO97HKjnabqtqte6inFt7nPDP4Zelh2WvZhHVH83S8Hre7j7e+9lbeq3LTHXKWVVs4oq0aiy4r4GuHqEz+KHHt9KiOOOTVuktl37Ksu3bcVt2X5L33nYrlXUY66svPwii8TbLvMbljj6flUN12LbrlvK1bqSuItVpxRE7qKaa98Z8mO3t8tdX7WeS0t/JT6jOw0tjSfcbVqNItMvEaiJQKZZqXuRErUnk49m1icvNR11yNdwb5a19ZXm4M8pmWodW73oWFxLL/111POqL2N/wApTZlUUrjDRXpVTnXeRARARARARARARARARARAouWptVviCGU2/ffiXtVltrbt7uWMVvBmPeZbyUa3wTVa5W+hFJiXpad+cRzSV+IPxbRf/wA7b/csf5hbf5jLxefiD8W/v23+5Y/zE2fMZeJ+IPxb+/bf7lj/ADCz5jLxPxB+Lf37b/csf5iLPmMvE/EH4t/ftv8Acsf5hZ8xl4n4g/Fv79t/uWP8xNnzGXifiD8W/v23+5Y/zEWfMZeJ+IPxb+/bf7lj/MLPmMvE/EH4t/ftv9yx/mFnzGXifiD8W/v23+5Y/wAxNnzGXifiD8W/v23+5Y/zCz5jLxPxB+Lf37b/AHLH+YWfMZeJ+IPxb+/bf7lj/MRZ8xl4n4g/Fv79t/uWP8xNnzGXifiD8W/v23+5Y/zEWfMZeJ+IPxb+/bf7lj/MTZ8xl4n4g/Fv79t/uWP8ws+Yy8T8Qfi39+2/3LH+YWfMZeJ+IPxb+/bf7lj/ADCz5jLxPxB+Lf37b/csf5iLPmMvE/EH4t/ftv8Acsf5ibPmMvE/EH4t/ftv9yx/mFnzGXifiD8W/v23+5Y/zCz5jLxPxB+Lf37b/csf5iLPmMvE/EH4t/ftv9yx/mJs+Yy8T8Qfi39+2/3LH+YWfMZeJ+IPxb+/bf7lj/MLPmMvE/EH4t/ftv8Acsf5hZ8xl4n4g/Fv79t/uWP8ws+Yy8T8Qfi39+2/3LH+YWfMZeJ+IPxb+/bf7lj/ADCz5jLxPxB+Lf37b/csf5iLPmMvE/EH4t/ftv8Acsf5ibPmMvE/EH4t/ftv9yx/mFnzGXifiD8W/v23+5Y/zCz5jLxPxB+Lf37b/csf5hZ8xl4n4g/Fv79t/uWP8xFnzGXifiD8W/v23+5Y/wAws+Yy8T8Qfi39+2/3LH+YWfMZeJ+IPxb+/bf7lj/MLPmMvE/EH4t/ftv9yx/mJs+Yy8T8Qfi39+2/3LH+YWfMZeJ+IPxb+/bf7lj/ADEWfMZeJ+IPxb+/bf7lj/MLPmMvE/EH4t/ftv8Acsf5hZ8xl4n4g/Fv79t/uWP8ws+Yy8T8Qfi39+2/3LH+YWfMZeJ+IPxb+/bf7lj/ADCz5jLxPxB+Lf37b/csf5hZ8xl4n4g/Fv79t/uWP8xNnzGXifiD8W/v23+5Y/zCz5jLxPxB+Lf37b/csf5iLPmMvE/EH4t/ftv9yx/mFnzGXifiD8W/v23+5Y/zE2fMZeJ+IPxb+/bf7lj/ADCz5jLxPxB+Lf37b/csf5iLPmMvE/EH4t/ftv8Acsf5hZ8xl4n4g/Fv79t/uWP8ws+Yy8T8Qfi39+2/3LH+YWfMZeKPm9bfFzKsra/6iW0i1RVtYuPbctf02tknyCye4y8WlN6Z3RNwdl7ldfk5F50n5Nxzrjnu8XOdVyr6SJlx7dkthtWYMRqdwcUq4gIgIgIgIgIgIgIgXYhJEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBED2ISk4OVew8lmRZWj2L608FJxmpKdE2neLGZjtvMWjux7O9F8Dqibi1OTL42TK6iu4dyC6b4bKZazcRU7Szt17khilZh1Y7HqNRXoipwUhrGSVaa9nBeLO7xQrLRqXUkcbqBMjHVW39NsnJ3L/6jh3zWdxzd2jjhU8nuJ1FudmqKrL6LxpcTj8ipQiN+SZ0YT9CLvuRd3iy1i2kx7rFqlxi1/IqIX+ZnwVjt4j2tBxvh3e2/Wdby0e25euX46aotbj1eqdq9lTm2fFNuzXn0xTNYOLft2la58uHFvYVxRllDJYDrtiy9HOi5VqjV4IWjFE5J21Z1599XJdsuqlFaivq2njRKGuuZieDLbGMxUs7teYy/Jum63cb2td2+mionA7de2+EvN3aemLjknOcb08/PYtXL6NRVEzTj2bmKz8y6rVRnavMrzcuWUy1vdtyt7fjue9UdddWDO9XEZTGMWQ0TIu3ci8+9dWT3rVVOWZtdaVpKHkQgiAiAiAiAiAiAiAiAiBexGp7zbr2Vr6gtjzZZ70DoUeXwAeTwAeTwAeXwAeXwAeXwAeXwAeXwAeXwAeXwAeXwAeXwAeXwAeXwAp8ngBV5fAB5fAB5fAB5fAB5fAB5fAB5PAB5fAB5fAB5fAB5fAB5fAB5fAB5fAB5fAB5fAB5fAB5fAB5fAB5fAB5fAB5PAB5fAB5fAB5fAB5PAB5fAB5fAB5fAB5fAB5fAB5PAB5fAB5fAB5PAB5fAB5fAB5PAB5fAB5fAB5PAB5fAB5fAB5fAB5fACLuTk9zdw7FaqetECufJjmJVtQwVRCCICICICICICICIF6IWIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgexAlbfnX8HIbetL/PZ3OQthn0kxbfNp3SxmWUuWncU9ti9qKdcTGUcGfJm8fJc2nGqFapMZ0yNnJavpHU3w7ikljqqikurDuYTGXkpxKTi6ce4hrm57Jn5Ofevsaite6rfMnZSnec2zTMzbt193jEUip03uqdjE/zm/OZ+RLb5vF6nT28J9FE/pN+cjyMk/N4KvsTeWrXSR/ofbT87kJ8mU/NYeKldi3ROzGT/Pt/yKpMaZVy7vDxWW9O7o+6q5Fhul2QR7afLx4lvJlnPe4wy2Hst1jfZYxE7kVqUJnVMK4d1jlxmUl0rTVaiNcqdj6oXx1+Lk7j1DCqxlFu5L07KG/VMvHz2xKBfvvVaqojGWdwwu7bxYwrSuetXr7DE7VUtlMYxxRHFoudl38y+69eWqr2J3InghyZZTlNtIR4kBEBEBEBEBEBEBEBEBEBEBEC5ZbS61eYTjzSXK6vaG7yTvEBJ3iAk7xASd4gJO8QEneICTvEBJ3iAk7xASd4gJO8QEneICTvEBJ3iAk7xASd4gJO8QEneICTvEBJ3iAk7xASd4gJO8QEneICTvEBJ3iAk7xASd4gJO8QEneICTvEBJ3iAk7xASd4gJO8QEneICTvEBJ3iAk7xASd4gJO8QEneICTvEBJ3iAk7xASd4gJO8QEneICTvEBJ3iAk7xASd4gJO8QEneICTvEBJ3iAk7xASd4gJO8QEneIEfNq7Geno/OgRlyWLLPKgYSriAiAiAiAiAiAiAiBegEkAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAL2Lk38W6l2w5WuTt8FTwUnHKYm4RMW3Daeo7GSjWXV0r/wBVexfQdmGyMvrZzhTP2cpF7y04K0mWstUpRTPpkhLt5viLleNkwvszWr3i2sb5XG5bfEcGkdwq96TxFQt8wLlN8RwR8wodlt8RwVnuFp+a3xFsp3SjXMxVHGWc5TKLdyq9qkxghCvZSIi8TSMEU17duo7VlHW7C6l7s5J6Sme2MeXNaMGqZF69kXVu3nK9696nHllMzctIhagQkgAgAgAgAgAgAgAgAgAgAgAgBXab+sQJx5rr04hspoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoAoBZyW1suT0fnCJ5KLTPKGUq4BBABABABABABABAC/ELURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFEQURBREFMpgb9mY1GPXVtp3L2p8pvhvmOfFScGw4PUGJfoiPi/6ruCnTjsxyUnGWVt5nMtOCtL7cvmV6Cl1MtCvQPUykHQHvSDoFK5ZPQLL8zmWjApHuZiU4qWjBNMVm9QYtmqI6b0+i3iUy2Y4pjCWvZ29ZeVVqLp21+i3tX0qcuzfOX0Q0jBjomK1EQURBREFEQURBREFEQURBREFEQURBREFEQURBT1jfOgTCt6cQ0eUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAUAtX21tr8n5wiXltnlDOlcQURBREFEQURBREFEQURBS9AJogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCiAKIAogCkmxnZlj+ruuRE+ivFDTHblHKUTjCda6iy28LjEfzTgbY91PthXoTLfUtv6THJ+U0jucfBHlrydR4vi5PkUt8xgjol4vUeL3K5fkUfMYHRKxc6lZ9Bjl9PArPdY+yE+WiXuocx3sNRnPtM57qfZC3QgX8zLv/wBZccqeFeBhltyy5ymMYWIFE0QBRAFEAUQBRAFEAUQBRAFEAUQBRAFEAUQBRAFEAUQBT1jPMgTD1zeIXeRARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARAouMqxQiRjOAVVQCKIAogCiAKIAogCiAKIApehyC1EOQKIcgUQ5AohyBRDkCiHIFEOQKIcgUQ5AohyBRDkCiHIFEOQKIcgUQ5AohyBRDkCiHIFEOQKIcgUQ5AohyBRDkCiHIFEOQKIcgUQ5AohyBRDkCiHIFEOQKIcgUQ5AohyBRDkCiHIFEOQKIcgUQ5AohyBRDkCiHIFEOQKIcgUQ5AohyBRDkCiHIFEOQKIcgUQ5AohyBRDkCnqM49gBzeIWeRARARARARARARARARAQARARARARAQAQARARARARARARARARARARARARARARARARARARARARARARARARAQARARARARARARARARARARARARARARARARAQARARA8czyqAazgFaew5AohyBRDkCiHIFEOQKIcgUQ5AohyBS/AJIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAeo0JeK0DyICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICICIBWcACM4BD2ACACACACACACACAF6IWoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgp4rQEVARUFEVARUBFQEVARUBFQEVARUFEVARUBFQEVBRFQEVARUBFQURUFEVARUBFQEVARUBFQEVARUFEVBRFQEVARUBFQEVARUBFQURUBFQEVARUBFQEVBRFQEVARUBFQEVBRFQEVBRFQEVBRFQURUFEVARUBFQEVARUBFQEVARUBBQU9ggKIgoiCiIKIgoiCiIKIgoiCl6ISRARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARAvxCxkiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiBfiFivQCxABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAC9EskiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiBeiEkQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQL0QsRARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARAuxCxEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEC9EJoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKXYAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAIAXYhaiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgoiCiIKIgpdiEkQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQEQLkQkiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiAiBdiSsRARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARAuRCxgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgIgXKBJQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQBQCqgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgCgFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAP/9k=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="7" hostname="202.116.104.161" path="/NIP/images/new/input.gif" url="http://202.116.104.161/NIP/images/new/input.gif" ip="202.116.104.161" port="80" connectionId="2056" origin="ExtraRes" ordinal="3" startTime="373" endTime="403">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzIwMi4xMTYuMTA0LjE2MS9OSVAvbG9naW4uYWN0aW9u</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>emgtQ04=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAyLjExNi4xMDQuMTYx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SlNFU1NJT05JRD1ERUQwNkNFQzE0N0NBOEQzNEE1MzcxNTc4NzQyRjhCQw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9OSVAvaW1hZ2VzL25ldy9pbnB1dC5naWYgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly8yMDIuMTE2LjEwNC4xNjEvTklQL2xvZ2luLmFjdGlvbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHpoLUNODQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogMjAyLjExNi4xMDQuMTYxDQpDb29raWU6IEpTRVNTSU9OSUQ9REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkMNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="JSESSIONID" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbngvMS4xNC4w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aW1hZ2UvZ2lm</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjEyNw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwNyBKdW4gMjAxOCAxMToxMDowMyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ETag" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IjViMTkxMjhiLTg0ZiI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U3VuLCAwOSBEZWMgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0yNTkyMDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTQuMA0KRGF0ZTogRnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQNCkNvbnRlbnQtVHlwZTogaW1hZ2UvZ2lmDQpDb250ZW50LUxlbmd0aDogMjEyNw0KTGFzdC1Nb2RpZmllZDogVGh1LCAwNyBKdW4gMjAxOCAxMToxMDowMyBHTVQNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkVUYWc6ICI1YjE5MTI4Yi04NGYiDQpFeHBpcmVzOiBTdW4sIDA5IERlYyAyMDE4IDA5OjI0OjUzIEdNVA0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0yNTkyMDAwDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>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</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="8" hostname="202.116.104.161" path="/NIP/images/new/btn_login.png" url="http://202.116.104.161/NIP/images/new/btn_login.png" ip="202.116.104.161" port="80" connectionId="2056" origin="ExtraRes" ordinal="4" startTime="373" endTime="414">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzIwMi4xMTYuMTA0LjE2MS9OSVAvbG9naW4uYWN0aW9u</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM0LjU3LjIgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMS43IFNhZmFyaS81MzQuNTcuMg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>emgtQ04=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAyLjExNi4xMDQuMTYx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SlNFU1NJT05JRD1ERUQwNkNFQzE0N0NBOEQzNEE1MzcxNTc4NzQyRjhCQw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9OSVAvaW1hZ2VzL25ldy9idG5fbG9naW4ucG5nIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vMjAyLjExNi4xMDQuMTYxL05JUC9sb2dpbi5hY3Rpb24NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMjsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNC41Ny4yIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi81LjEuNyBTYWZhcmkvNTM0LjU3LjINCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiB6aC1DTg0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IDIwMi4xMTYuMTA0LjE2MQ0KQ29va2llOiBKU0VTU0lPTklEPURFRDA2Q0VDMTQ3Q0E4RDM0QTUzNzE1Nzg3NDJGOEJDDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="JSESSIONID" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>REVEMDZDRUMxNDdDQThEMzRBNTM3MTU3ODc0MkY4QkM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbngvMS4xNC4w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aW1hZ2UvcG5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ODczNw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwNyBKdW4gMjAxOCAxMToxMDowMyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ETag" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IjViMTkxMjhiLTIyMjEi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U3VuLCAwOSBEZWMgMjAxOCAwOToyNDo1MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0yNTkyMDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTQuMA0KRGF0ZTogRnJpLCAwOSBOb3YgMjAxOCAwOToyNDo1MyBHTVQNCkNvbnRlbnQtVHlwZTogaW1hZ2UvcG5nDQpDb250ZW50LUxlbmd0aDogODczNw0KTGFzdC1Nb2RpZmllZDogVGh1LCAwNyBKdW4gMjAxOCAxMToxMDowMyBHTVQNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkVUYWc6ICI1YjE5MTI4Yi0yMjIxIg0KRXhwaXJlczogU3VuLCAwOSBEZWMgMjAxOCAwOToyNDo1MyBHTVQNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MjU5MjAwMA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>